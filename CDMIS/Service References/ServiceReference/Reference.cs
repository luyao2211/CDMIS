//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDMIS.ServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://bme319.org/", ConfigurationName="ServiceReference.ServicesSoap")]
    public interface ServicesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTmpLabSubItemByStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTmpLabSubItemByStatus(int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMpLabSubItemCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMpLabSubItemCmp(string HospitalCode, string HZCode, string Code, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ChangeStatusForTmpLabSubItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeStatusForTmpLabSubItem(string HospitalCode, string Code, int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMpLabSubItemCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMpLabSubItemCmp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetLabSubItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetLabSubItem(string Code, string Name, int SortNo, string InputCode, string Description, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLabSubItemName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLabSubItemName(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTmpExamItemByStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTmpExamItemByStatus(int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMpExamItemCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMpExamItemCmp(string HospitalCode, string HZCode, string Code, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ChangeStatusForTmpExamItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeStatusForTmpExamItem(string HospitalCode, string Code, int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMpExamItemCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMpExamItemCmp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetExaminationSubItemS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetExaminationSubItemS(string Code, string Name, int SortNo, string InputCode, string Description, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExamSubItemName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetExamSubItemName(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTmpExaminationByStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTmpExaminationByStatus(int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMpExaminationCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMpExaminationCmp(string HospitalCode, string HZCode, string Type, string Code, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ChangeStatusForTmpExamination", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeStatusForTmpExamination(string HospitalCode, string Code, int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMpExaminationCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMpExaminationCmp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetExamItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetExamItem(string Type, string Code, string TypeName, string Name, int SortNo, string InputCode, string Description, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExamItemTypeNameByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetExamItemTypeNameByType(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExamItemName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetExamItemName(string Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMpVitalSignsCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMpVitalSignsCmp(string piHospitalCode, string piHZCode, string piType, string piCode, string piDescription, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMpOperationCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMpOperationCmp(string piHospitalCode, string piHZCode, string piCode, string piDescription, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetOperation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetOperation(string piCode, string piName, string piInputCode, string piDescription, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetOperationName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetOperationName(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetOperation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOperation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ChangeStatusForTmpOperation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeStatusForTmpOperation(string HospitalCode, string Code, int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTmpOperationByStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTmpOperationByStatus(int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMpOperationCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMpOperationCmp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMpVitalSignsCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMpVitalSignsCmp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetVitalSignsTypeNamebyType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVitalSignsTypeNamebyType(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetVitalSignsName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVitalSignsName(string Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDivision", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDivision();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetDivision", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetDivision(int piType, string piCode, string piTypeName, string piName, string piInputCode, string piDescription, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetTmpDivisionDict", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetTmpDivisionDict(string HospitalCode, string Type, string Code, string TypeName, string Name, string InputCode, string Description, int Status, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ChangeStatusForTmpDivision", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeStatusForTmpDivision(string HospitalCode, string Type, string Code, int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTmpDivisionByStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTmpDivisionByStatus(int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMpDivisionCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMpDivisionCmp(string HospitalCode, int Type, string Code, string HZCode, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteMpDivisionCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteMpDivisionCmp(string HospitalCode, string HZCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMpDivisionCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMpDivisionCmp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDivisionNamebyCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDivisionNamebyCode(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDivisionTypeNamebyType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDivisionTypeNamebyType(int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetDiagnosis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetDiagnosis(string Type, string Code, string TypeName, string Name, string InputCode, string Redundance, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDiagnosis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDiagnosis();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDiagnosisNamebyCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDiagnosisNamebyCode(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDiagnosisTypeNamebyType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDiagnosisTypeNamebyType(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ChangeStatusForTmpDiagnosis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeStatusForTmpDiagnosis(string HospitalCode, string Code, int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTmpDiagnosisByStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTmpDiagnosisByStatus(int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMpDiagnosisCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMpDiagnosisCmp(string HospitalCode, string HZCode, string Type, string Code, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMpDiagnosisCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMpDiagnosisCmp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/sendSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string sendSMS(string mobile, string smsType, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/checkverification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int checkverification(string mobile, string smsType, string verification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPatientDetailInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.PatientDetailInfo1 GetPatientDetailInfo(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDoctorDetailInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.DoctorDetailInfo1 GetDoctorDetailInfo(string Doctor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPatBasicInfoDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPatBasicInfoDetail(string Patient, string CategoryCode, string ItemCode, int ItemSeq, string Value, string Description, int SortNo, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPatBasicInfoDtlList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatBasicInfoDtlList(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteModuleDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteModuleDetail(string Patient, string CategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SynBasicInfoDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SynBasicInfoDetail(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SynBasicInfoDetailForM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SynBasicInfoDetailForM2(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SynBasicInfoDetailForM3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SynBasicInfoDetailForM3(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetClinicalInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetClinicalInfo(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDiagnosisInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDiagnosisInfo(string UserId, string VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExaminationInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetExaminationInfo(string UserId, string VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLabTestInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLabTestInfo(string UserId, string VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDrugRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDrugRecord(string UserId, string VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetWnMstBasicAlert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.WnMstAlert GetWnMstBasicAlert(string AlertItemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMPAMaxSortNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetMPAMaxSortNo(string UserId, string AlertItemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPsPatient2VS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPsPatient2VS(string UserId, string VitalSignsType, string VitalSignsCode, int InvalidFlag, int SortNo, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPatientVitalSigns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPatientVitalSigns(string UserId, int RecordDate, int RecordTime, string ItemType, string ItemCode, string Value, string Unit, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPatient2VS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatient2VS(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPatientVitalSigns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatientVitalSigns(string UserId, string ItemType, string ItemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPatientVitalSignsAndThreshold", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatientVitalSignsAndThreshold(string UserId, string ItemType, string ItemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetWnMstAlert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.WnMstAlert GetWnMstAlert(string UserId, string AlertItemCode, int CheckDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetWnMstPersonalAlert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetWnMstPersonalAlert(string UserId, string AlertItemCode, int SortNo, decimal Min, decimal Max, string Units, int StartDate, int EndDate, string Remarks, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPsTreatmentIndicators", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPsTreatmentIndicators(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetParameters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetParameters(string UserId, int SortNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/UpdateReminder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateReminder(
                    string PatientId, 
                    string ReminderNo, 
                    int ReminderType, 
                    int SortNo, 
                    string Content, 
                    int AlertMode, 
                    System.DateTime StartDateTime, 
                    int NextDate, 
                    int NextTime, 
                    int Interval, 
                    int InvalidFlag, 
                    string Description, 
                    string CreatedBy, 
                    string revUserId, 
                    string TerminalName, 
                    string TerminalIP, 
                    int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetReminder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetReminder(string PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteReminder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteReminder(string piPatientId, string piReminderNo, string UserId, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetReminder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetReminder(int Type, string PatientId, string ReminderNo, int ReminderType, string Content, string StartDateTime, string Creater, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetReminder_Once", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetReminder_Once(int Type, string PatientId, string ReminderNo, int ReminderType, string Content, int AlertMode, string StartDateTime, System.DateTime OnceDateTime, string Creater, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetReminder_Everyday", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetReminder_Everyday(int Type, string PatientId, string ReminderNo, int ReminderType, string Content, int AlertMode, string StartDateTime, string EveryDayTime, string Creater, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetReminder_Weekly", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetReminder_Weekly(int Type, string PatientId, string ReminderNo, int ReminderType, string Content, int AlertMode, string StartDateTime, string WeeklyWeek, string WeeklyTime, string Creater, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetReminder_Monthly", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetReminder_Monthly(int Type, string PatientId, string ReminderNo, int ReminderType, string Content, int AlertMode, string StartDateTime, string MonthlyDay, string MonthlyTime, string Creater, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetReminder_Annual", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetReminder_Annual(int Type, string PatientId, string ReminderNo, int ReminderType, string Content, int AlertMode, string StartDateTime, string AnnualMonth, string AnnualDay, string AnnualTime, string Creater, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetReminder_Interval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetReminder_Interval(
                    int Type, 
                    string PatientId, 
                    string ReminderNo, 
                    int ReminderType, 
                    string Content, 
                    int AlertMode, 
                    string StartDateTime, 
                    int FreqYear, 
                    int FreqMonth, 
                    int FreqDay, 
                    int FreqHour, 
                    int FreqMunite, 
                    string Creater, 
                    string revUserId, 
                    string TerminalName, 
                    string TerminalIP, 
                    int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDataByTC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.VitalSigns GetDataByTC(string Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetClinicalNew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.Clinic GetClinicalNew(string UserId, System.DateTime AdmissionDate, System.DateTime ClinicDate, int Num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetClinicInfoDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetClinicInfoDetail(string UserId, string Type, string VisitId, string Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetClinicalNewMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetClinicalNewMobile(string UserId, System.DateTime AdmissionDate, System.DateTime ClinicDate, int Num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/UpdateIsDone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateIsDone(string PatientId, string ReminderNo, int TaskDate, int TaskTime, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetUndoneNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetUndoneNum(string PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetUndoneList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUndoneList(string PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetToDoList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetToDoList(string PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPsTarget", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPsTarget(string PlanNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPsTaskByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPsTaskByType(string PlanNo, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDrugDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDrugDetail(string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLifeStyleDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLifeStyleDetail(string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPsTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPsTask(string PlanNo, string Id, string Type, string Code, string Instruction, string UserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/CreateTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CreateTask(string PlanNo, string Task, string UserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPatientDrugRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatientDrugRecord(string PatientId, string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetGoalValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetGoalValue(string PlanNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLatestPulseByPatientId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLatestPulseByPatientId(string PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLatestSbpByPatientId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLatestSbpByPatientId(string PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLatestDbpByPatientId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLatestDbpByPatientId(string PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetTarget", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SetTarget(string Plan, string Id, string Type, string Code, string Value, string Origin, string Instruction, string Unit, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPlan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SetPlan(string PlanNo, string PatientId, int StartDate, int EndDate, string Module, int Status, string DoctorId, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetBPGrades", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.MstBloodPressure[] GetBPGrades();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDescription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDescription(int SBP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetValueByPlanNoAndId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetValueByPlanNoAndId(string PlanNo, string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetRiskInput", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRiskInput(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetRiskResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetRiskResult(string UserId, int SortNo, string AssessmentType, string AssessmentName, System.DateTime AssessmentTime, string Result, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetRiskResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRiskResult(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTaskNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetTaskNumber(string PatientId, string PlanNo, int PiStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTaskByStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTaskByStatus(string PatientId, string PlanNo, int PiStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDateTimebyNow", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDateTimebyNow();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetComlianceDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SetComlianceDetail(string PatientId, int DateByNow, string PlanNo, string Id, int Status, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPlanInfobyPID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPlanInfobyPID(string PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetOverDuePlanList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOverDuePlanList(string DoctorId, string ModuleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPatientsList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatientsList(string DoctorId, string ModuleType, int Plan, int Compliance, int Goal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetHealthEducation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetHealthEducation(string Module, string HealthId, int Type, string FileName, string Path, string Introduction, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetVedioAddressList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetVedioAddressList(string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTextAddressList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTextAddressList(string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetImageAddressList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetImageAddressList(string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPDFAddressList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPDFAddressList(string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetAddressByTypeList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAddressByTypeList(string Module, int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAll(string Module, string HealthId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteHealthEducationInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteHealthEducationInfo(string Module, string Health);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMstDevice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMstDevice(string Device, string Address, string Port, string VersionNo, string Description, string Redundance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetIPAndPort", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIPAndPort(string Device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetComplianceListByPeriod", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetComplianceListByPeriod(string PatientId, string PlanNo, int EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetAllComplianceListByPeriod", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAllComplianceListByPeriod(string PatientId, string PlanNo, int StartDate, int EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTasksByIndate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTasksByIndate(string PatientId, int Indate, string PlanNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPlanList34ByM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.PlanDeatil[] GetPlanList34ByM(string PatientId, string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPsTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPsTask(string PlanNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPlanInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.PlanDeatil GetPlanInfo(string PlanNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/PlanStart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int PlanStart(string PlanNo, int Status, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetCompliance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SetCompliance(string PatientId, int DDate, string PlanNo, double Compliance, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetComplianceDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SetComplianceDetail(string Parent, string Id, int Status, string CoUserId, string CoTerminalName, string CoTerminalIP, int CoDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetInactiveUserByRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetInactiveUserByRole(string RoleClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetActivationCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SetActivationCode(string UserId, string RoleClass, [System.ServiceModel.MessageParameterAttribute(Name="SetActivationCode")] string SetActivationCode1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetActiveUserByRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetActiveUserByRole(string RoleClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExecutingPlanByModule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetExecutingPlanByModule(string PatientId, string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/UpdatePlanStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdatePlanStatus(string PlanNo, int Status, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetBloodPressureList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBloodPressureList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetBloodPressure", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SetBloodPressure(string Code, string Name, string Description, int SBP, int DBP, string PatientClass, string Redundance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteBloodPressure", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteBloodPressure(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetHealthEducationList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHealthEducationList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLifeStyleList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLifeStyleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteLifeStyle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteLifeStyle(string StyleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLifeStyleDetailList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLifeStyleDetailList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteLifeStyleDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteLifeStyleDetail(string StyleId, string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMstTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SetMstTask(string CategoryCode, string Code, string Name, string ParentCode, string Description, int StartDate, int EndDate, int GroupHeaderFlag, int ControlType, string OptionCategory, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteMstTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteMstTask(string CategoryCode, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMstTaskByParentCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMstTaskByParentCode(string ParentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTasks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTasks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetCmTaskItemInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.TaskDetailInfo GetCmTaskItemInfo(string CategoryCode, string Code);
        
        // CODEGEN: Parameter 'fs' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/UpLoadImage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.UpLoadImageResponse UpLoadImage(CDMIS.ServiceReference.UpLoadImageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetImplementationForPadFirst", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetImplementationForPadFirst(string PatientId, string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetImplementationForPadSecond", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetImplementationForPadSecond(string PatientId, string PlanNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSignInfoByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetSignInfoByCode(string PatientId, string PlanNo, string ItemCode, int StartDate, int EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetImplementationByDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetImplementationByDate(string PatientId, string PlanNo, string DateSelected);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetImplementationForPhone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetImplementationForPhone(string PatientId, string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSignsDetailByPeriod", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetSignsDetailByPeriod(string PatientId, string Module, int StartDate, int Num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetImplementationForWebFirst", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.ImplementationInfo GetImplementationForWebFirst(string PatientId, string Module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetImplementationForWebSecond", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.ImplementationInfo GetImplementationForWebSecond(string PatientId, string PlanNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSignInfoByCodeWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.ChartData GetSignInfoByCodeWeb(string PatientId, string PlanNo, string ItemCode, int StartDate, int EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/getRemoteIPAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getRemoteIPAddress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTmpDrugByStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTmpDrugByStatus(int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMpDrugCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMpDrugCmp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDrugName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDrugName(string DrugCode, string DrugSpec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMpDrugCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMpDrugCmp(string HospitalCode, string HZCode, string HzSpec, string DrugCode, string DrugSpec, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ChangeStatusForTmpDrug", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeStatusForTmpDrug(string HospitalCode, string DrugCode, string DrugSpec, int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTmpLabItemByStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTmpLabItemByStatus(int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMpLabItemCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMpLabItemCmp(string HospitalCode, string HZCode, string Type, string Code, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ChangeStatusForTmpLabItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeStatusForTmpLabItem(string HospitalCode, string Code, int Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMpLabItemsCmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMpLabItemsCmp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetLabTestItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetLabTestItem(string Type, string Code, string TypeName, string Name, int SortNo, string InputCode, string Description, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLabItemTypeNameByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLabItemTypeNameByType(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLabItemName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLabItemName(string Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetDocName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetDocName(string UserId, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetModuleByDoctorId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetModuleByDoctorId(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetRoleList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRoleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetAuthorityList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAuthorityList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetRoleAuthorityList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRoleAuthorityList(string roleCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSubAuthorityList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSubAuthorityList(string AuthorityCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetRole2Authority", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetRole2Authority(string piRoleCode, string piAuthorityCode, string piSubAuthorityCode, string piRedundance, int piInvalidFlag, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDoctorInfoList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDoctorInfoList(string docId, string docName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDoctorModuleList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDoctorModuleList(string DoctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetModuleList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetModuleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPsDoctor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPsDoctor(string UserId, string UserName, int Birthday, int Gender, string IDNo, int InvalidFlag, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPsDoctorDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPsDoctorDetail(string Doctor, string CategoryCode, string Value, string Description, int SortNo, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPatListByDoctorId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatListByDoctorId(string DoctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDoctorListByModule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDoctorListByModule(string CategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeletePatient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeletePatient(string DoctorId, string CategoryCode, string Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetVitalSignsTypeNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetVitalSignsTypeNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetVitalSignsNameListByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetVitalSignsNameListByType(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDoctorList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDoctorList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPatBasicInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPatBasicInfo(string UserId, string UserName, int Birthday, int Gender, int BloodType, string IDNo, string DoctorId, string InsuranceType, int InvalidFlag, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/UpdatePatBasicInfoDtl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdatePatBasicInfoDtl(string Patient, string CategoryCode, string ItemCode, int ItemSeq, string Value, string Description, int SortNo, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPatBasicInfoDtl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPatBasicInfoDtl(string Patient, string CategoryCode, string ItemCode, string Value, string Description, int SortNo, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteModule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteModule(string UserId, string CategoryCode, string ItemCode, int ItemSeq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteVitalSignsInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteVitalSignsInfo(string UserId, string VitalSignsType, string VitalSignsCode, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPatToVSInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPatToVSInfo(string UserId, string VitalSignsType, string VitalSignsCode, int InvalidFlag, int SortNo, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetVitalSignsNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetVitalSignsNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMstInfoItemByCategoryCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMstInfoItemByCategoryCode(string CategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetNoByNumberingType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNoByNumberingType(int NumberingType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetModulesBoughtByPId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetModulesBoughtByPId(string PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetModulesUnBoughtByPId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetModulesUnBoughtByPId(string PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetItemInfoByPIdAndModule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetItemInfoByPIdAndModule(string PatientId, string CategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetHUserId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetHUserId(string UserId, string HUserId, string HospitalCode, string Description, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/getLatestHUserIdByHCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getLatestHUserIdByHCode(string UserId, string HospitalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDeptList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDeptList(string TypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetInPatientInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetInPatientInfo(string UserId, string VisitId, int SortNo, System.DateTime AdmissionDate, System.DateTime DischargeDate, string HospitalCode, string Department, string Doctor, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetOutPatientInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetOutPatientInfo(string UserId, string VisitId, System.DateTime ClinicDate, string HospitalCode, string Department, string Doctor, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteInPatientInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteInPatientInfo(string UserId, string VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteOutPatientInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteOutPatientInfo(string UserId, string VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteSymptomsInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteSymptomsInfo(string UserId, string VisitId, int SymptomsNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLabTestItemsTypeNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLabTestItemsTypeNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDiagnosisInfoList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDiagnosisInfoList(string UserId, string VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetDiagnosisInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetDiagnosisInfo(string UserId, string VisitId, int DiagnosisType, string DiagnosisNo, string Type, string DiagnosisCode, string Description, string RecordDate, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteDiagnosisInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteDiagnosisInfo(string UserId, string VisitId, int DiagnosisType, string DiagnosisNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDiagNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDiagNameList(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDiabetesDrugNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDiabetesDrugNameList(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetHypertensionDrugNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHypertensionDrugNameList(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLipidDrugNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLipidDrugNameList(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetAcidDrugNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAcidDrugNameList(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDiagTypeNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDiagTypeNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDiabetesDrugTypeNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDiabetesDrugTypeNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetHypertensionDrugTypeNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHypertensionDrugTypeNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLipidDrugTypeNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLipidDrugTypeNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetUricAcidReductionDrugTypeNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUricAcidReductionDrugTypeNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetClinicalInfoList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetClinicalInfoList(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetClinicalInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetClinicalInfo(string UserId, int VisitId, int VisitType, int AdmissionDate, int DischargeDate, string HospitalCode, string Department, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteClinicalInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteClinicalInfo(string UserId, int VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetHospitalList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHospitalList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExaminationList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetExaminationList(string UserId, string VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/UpdateExamination", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateExamination(
                    string UserId, 
                    string VisitId, 
                    int SortNo, 
                    string ExamType, 
                    string ExamDate, 
                    string ItemCode, 
                    string ExamPara, 
                    string Decription, 
                    string Impression, 
                    string Recommendation, 
                    int IsAbnormal, 
                    string Status, 
                    string ReportDate, 
                    string ImageURL, 
                    string DeptCode, 
                    string revUserId, 
                    string TerminalName, 
                    string TerminalIP, 
                    int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetExamination", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetExamination(
                    string UserId, 
                    string VisitId, 
                    string ExamType, 
                    string ExamDate, 
                    string ItemCode, 
                    string ExamPara, 
                    string Decription, 
                    string Impression, 
                    string Recommendation, 
                    int IsAbnormal, 
                    string Status, 
                    string ReportDate, 
                    string ImageURL, 
                    string DeptCode, 
                    string revUserId, 
                    string TerminalName, 
                    string TerminalIP, 
                    int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteExamination", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteExamination(string UserId, string VisitId, int SortNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLabTestList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLabTestList(string UserId, string VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/UpdateLabTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateLabTest(string UserId, string VisitId, string SortNo, string LabItemType, string LabItemCode, string LabTestDate, string Status, string ReportDate, string DeptCode, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetLabTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetLabTest(string UserId, string VisitId, string LabItemType, string LabItemCode, string LabTestDate, string Status, string ReportDate, string DeptCode, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteLabTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteLabTest(string UserId, string VisitId, string SortNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDrugNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDrugNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDrugRecordList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDrugRecordList(string UserId, string VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/UpdateDrugRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateDrugRecord(
                    string UserId, 
                    string VisitId, 
                    int OrderNo, 
                    int OrderSubNo, 
                    int RepeatIndicator, 
                    string OrderClass, 
                    string OrderCode, 
                    string OrderContent, 
                    decimal Dosage, 
                    string DosageUnits, 
                    string Administration, 
                    System.DateTime StartDateTime, 
                    System.DateTime StopDateTime, 
                    int Duration, 
                    string DurationUnits, 
                    string Frequency, 
                    int FreqCounter, 
                    int FreqInteval, 
                    string FreqIntevalUnit, 
                    string DeptCode, 
                    string revUserId, 
                    string TerminalName, 
                    string TerminalIP, 
                    int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetDrugRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetDrugRecord(
                    string UserId, 
                    string VisitId, 
                    int OrderSubNo, 
                    int RepeatIndicator, 
                    string OrderClass, 
                    string OrderCode, 
                    string OrderContent, 
                    decimal Dosage, 
                    string DosageUnits, 
                    string Administration, 
                    System.DateTime StartDateTime, 
                    System.DateTime StopDateTime, 
                    int Duration, 
                    string DurationUnits, 
                    string Frequency, 
                    int FreqCounter, 
                    int FreqInteval, 
                    string FreqIntevalUnit, 
                    string DeptCode, 
                    string revUserId, 
                    string TerminalName, 
                    string TerminalIP, 
                    int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteDrugRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteDrugRecord(string UserId, string VisitId, int OrderNo, int OrderSubNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExamItemNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetExamItemNameList(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLabTestItemsNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLabTestItemsNameList(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExamItemTypeNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetExamItemTypeNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExamDtlList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetExamDtlList(string UserId, string VisitId, string SortNo, string ItemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetExamDtl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetExamDtl(string UserId, string VisitId, int SortNo, string Code, string Value, int IsAbnormal, string Unit, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteExamDtl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteExamDtl(string UserId, string VisitId, int SortNo, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExamSubItemNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetExamSubItemNameList(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLabTestDtlList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLabTestDtlList(string UserId, string VisitId, string SortNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetLabTestDtl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetLabTestDtl(string UserId, string VisitId, string SortNo, string Code, string Value, int IsAbnormal, string Unit, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeteleLabTestDtl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeteleLabTestDtl(string UserId, string VisitId, string SortNo, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLabTestSubItemNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLabTestSubItemNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPsDoctorDetailOnPat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPsDoctorDetailOnPat(string Doctor, string CategoryCode, string Value, string Description, int SortNo, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPatBasicInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.PatientBasicInfo GetPatBasicInfo(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetUntreatedAlertAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetUntreatedAlertAmount(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetCareLevel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetCareLevel(string UserId, string ModuleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSymptomsListByPId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSymptomsListByPId(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSymptomsTypeList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSymptomsTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSymptomsNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSymptomsNameList(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetSymptomsInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetSymptomsInfo(string UserId, string VisitId, string SymptomsType, string SymptomsCode, string Description, int RecordDate, int RecordTime, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/UpdateSymptomsInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateSymptomsInfo(string UserId, string VisitId, int SynptomsNo, string SymptomsType, string SymptomsCode, string Description, int RecordDate, int RecordTime, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSymptomsList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSymptomsList(string UserId, string VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDurationNameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDurationNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteTreatmentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteTreatmentInfo(string UserId, int SortNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTreatmentGoalsList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTreatmentGoalsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTreatmentActionList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTreatmentActionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetGroupList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetGroupList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetTreatmentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetTreatmentInfo(string UserId, int TreatmentGoal, int TreatmentAction, int Group, string TreatmentPlan, string Description, System.DateTime TreatTime, string Duration, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/UpdateTreatmentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateTreatmentInfo(string UserId, int SortNo, int TreatmentGoal, int TreatmentAction, int Group, string TreatmentPlan, string Description, System.DateTime TreatTime, string Duration, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTreatmentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTreatmentList(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetTrnProcessFlag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetTrnProcessFlag(string UserId, int SortNo, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetTrnAlertRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetTrnAlertRecord(string UserId, string AlertItemCode, System.DateTime AlertDateTime, int AlertType, int PushFlag, int ProcessFlag, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTrnAlertRecordList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTrnAlertRecordList(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SendAlertMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SendAlertMessage(string MessageNo, int MessageType, string SendBy, string Title, string Reciever, string Content, int SetCondition, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPushFlag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPushFlag(string UserId, int SortNo, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetUnreadCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetUnreadCount(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDraftCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetDraftCount(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserName(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetConForDoctor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetConForDoctor(string UserId, string CategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetConForPatient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetConForPatient(string UserId, string CategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetClass", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetClass(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetConForAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetConForAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDraftList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDraftList(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMessage(string MessageNo, int MessageType, string SendBy, string Title, string Reciever, string Content, int SetCondition, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMessageDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.Message GetMessageDetail(string MessageNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteDraft", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteDraft(string MessageNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetReceiveList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetReceiveList(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ChangeReadStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeReadStatus(string MessageNo, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetHaveSentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHaveSentList(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetSMS(string SendBy, string Reciever, string Content, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSMSCountForAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetSMSCountForAll(string DoctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSMSCountForOne", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetSMSCountForOne(string Reciever, string SendBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSMSList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSMSList(string DoctorId, string CategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSMSDialogue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSMSDialogue(string Reciever, string SendBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetSMSRead", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetSMSRead(string Reciever, string SendBy, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLatestSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.Message GetLatestSMS(string DoctorId, string PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ChangePushStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangePushStatus(string MessageNo, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSMSFlag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSMSFlag(string MessageNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetToken(string UserId, string UserName, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/getLocalmachineIPAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getLocalmachineIPAddress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/TestGetCacheConnection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool TestGetCacheConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTypeList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTypeList(string Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetMstTypeName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetMstTypeName(string Category, int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteUser(string UserId, int Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetServerTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetServerTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetServerLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetServerLog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPatientsByDoctorId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatientsByDoctorId(string DoctorId, string VisitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ChangCareLevel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangCareLevel(string moduleType, string PatientId, string DoctorId, int carelevel, string revUserId, string pTerminalIP, string pTerminalName, int pDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetAlertsByDoctorId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAlertsByDoctorId(string DoctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetProcessFlag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetProcessFlag(string UserId, int SortNo, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/CheckPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckPassword(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/UpdateLastLoginDateTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateLastLoginDateTime(string UserId, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/CheckPasswordByInput", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckPasswordByInput(string Type, string Name, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/Register", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Register(string Type, string Name, string Value, string Password, string UserName, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/Activition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Activition(string UserId, string InviteCode, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/CheckRepeat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckRepeat(string Input, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetAllRoleMatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAllRoleMatch(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPsRoleMatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SetPsRoleMatch(string PatientId, string RoleClass, string ActivationCode, string ActivatedState, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetCmMstUserDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SetCmMstUserDetail(string UserId, int StartDate, string Type, string Name, string Value, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetIDByInput", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIDByInput(string Type, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetActivition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SetActivition(string UserID, string RoleClass, string ActivationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetActivatedState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetActivatedState(string UserID, string RoleClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPhoneNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SetPhoneNo(string UserId, string Type, string Name, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetActivateCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetActivateCode(string UserID, string RoleClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/CheckPatientPhoneNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckPatientPhoneNumber(string UserId, string piPhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/CheckDoctorPhoneNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckDoctorPhoneNumber(string UserId, string piPhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ChangePassword(string UserId, string OldPassword, string newPassword, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/ResetPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ResetPassword(string UserId, string OldPassword, string newPassword, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/CheckPhoneNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckPhoneNumber(string Type, string piName, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetBasicInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.PatientBasicInfo0 GetBasicInfo(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDetailInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.PatientDetailInfo0 GetDetailInfo(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetUserBasicInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.PatientALLBasicInfo GetUserBasicInfo(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPatientBasicInfoDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatientBasicInfoDetail(string UserId, string CategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetBasicInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetBasicInfo(string UserId, string UserName, int Birthday, int Gender, int BloodType, string IDNo, string DoctorId, string InsuranceType, int InvalidFlag, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetBasicInfoDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetBasicInfoDetail(string Patient, string CategoryCode, string ItemCode, int ItemSeq, string Value, string Description, int SortNo, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDoctorInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDoctorInfo(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDoctorInfoDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CDMIS.ServiceReference.DoctorDetailInfo0 GetDoctorInfoDetail(string Doctor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetDoctorInfoDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetDoctorInfoDetail(string Doctor, string CategoryCode, string ItemCode, int ItemSeq, string Value, string Description, int SortNo, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetHospitalMaxCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetHospitalMaxCode(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDivisionMaxCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetDivisionMaxCode();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetType(string Category, int Type, string Name, int InvalidFlag, int SortNo, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteType(string Category, int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetRole(string Code, string Name, int SortNo, string Redundance, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRole();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteRole(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetAuthority", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetAuthority(string piCode, string piName, int piSortNo, string piRedundance, int piInvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetAuthority", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAuthority();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteAuthority", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteAuthority(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetAuthorityDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetAuthorityDetail(string Authority, string piCode, string piName, int piSortNo, string piRedundance, int piInvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetAuthorityDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAuthorityDetail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSubAuthority", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSubAuthority(string Authority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteAuthorityDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteAuthorityDetail(string Authority, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteDivision", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteDivision(int Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetHospital", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetHospital(string Code, int Type, string Name, int SortNo, int StartDate, int EndDate, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetHospital", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHospital();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteHospital", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteHospital(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetSymptoms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetSymptoms(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSymptoms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSymptoms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteSymptoms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteSymptoms(string Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteDiagnosis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteDiagnosis(string Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetVitalSigns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetVitalSigns(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetVitalSigns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetVitalSigns();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteVitalSigns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteVitalSigns(string Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetExaminationItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetExaminationItem(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExaminationItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetExaminationItem();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteExaminationItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteExaminationItem(string Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetExaminationSubItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetExaminationSubItem(string Code, string Name, int SortNo, string InputCode, string Redundance, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExaminationSubItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetExaminationSubItem();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteExaminationSubItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteExaminationSubItem(string Code, string SubCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetLabTestItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetLabTestItems(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLabTestItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLabTestItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteLabTestItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteLabTestItems(string Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetLabTestSubItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetLabTestSubItems(string Code, string Name, int SortNo, string InputCode, string Redundance, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLabTestSubItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLabTestSubItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteLabTestSubItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteLabTestSubItems(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetTreatment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetTreatment(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTreatment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTreatment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteTreatment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteTreatment(string Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetIndicator", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetIndicator(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetIndicator", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIndicator();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteIndicator", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteIndicator(string Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetIndicatorParameter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetIndicatorParameter(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetIndicatorParameter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIndicatorParameter();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteIndicatorParameter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteIndicatorParameter(string Type, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNo(int NumberingType, string TargetDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetInfoItemCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetInfoItemCategory(string Code, string Name, int SortNo, int StartDate, int EndDate, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetInfoItemCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetInfoItemCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteInfoItemCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteInfoItemCategory(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetInfoItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetInfoItem(string CategoryCode, string Code, string Name, string ParentCode, int SortNo, int StartDate, int EndDate, int GroupHeaderFlag, string ControlType, string OptionCategory, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetInfoItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetInfoItem();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteInfoItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteInfoItem(string CategoryCode, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetBasicAlert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetBasicAlert(string AlertItemCode, string AlertItemName, decimal Min, decimal Max, string Units, string Remarks, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetBasicAlert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBasicAlert();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteBasicAlert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteBasicAlert(string AlertItemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetExaminationItemMaxCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetExaminationItemMaxCode(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetSymptomsMaxCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSymptomsMaxCode(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetDiagnosisMaxCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDiagnosisMaxCode(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetVitalSignsMaxCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVitalSignsMaxCode(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetLabTestItemsMaxCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLabTestItemsMaxCode(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTreatmentMaxCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTreatmentMaxCode(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetIndicatorMaxCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIndicatorMaxCode(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetIndicatorParameterMaxCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIndicatorParameterMaxCode(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetTypeMaxCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTypeMaxCode(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetNextCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetNextCode(string CategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetDrug", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetDrug(string DrugCode, string DrugName, string DrugSpec, string Units, string DrugIndicator, string InputCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetDrugDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetDrugDetail(string DrugCode, string Module, string CurativeEffect, string SideEffect, string Instruction, string HealthEffect, string Unit, string Redundance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetLifeStyle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetLifeStyle(string StyleId, string Name, string Redundance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetLifeStyleDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetLifeStyleDetail(string StyleId, string Module, string CurativeEffect, string SideEffect, string Instruction, string HealthEffect, string Unit, string Redundance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetInsurance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetInsurance(string Code, string Name, string InputCode, string Redundance, int InvalidFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteInsurance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteInsurance(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetInsuranceType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetInsuranceType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetInsurance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetInsurance();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetInsuranceName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetInsuranceName(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMstUserUM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMstUserUM(string UserId, string UserName, string Password, string Class, int EndDate, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/DeleteRoleData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteRoleData(string PatientId, string RoleClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetClassByUserId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetClassByUserId(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetUserInfoList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUserInfoList(string userId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetMstUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetMstUser(string UserId, string UserName, string Password, string Class, string PatientClass, int DoctorClass, int StartDate, int EndDate, System.DateTime LastLoginDateTime, string revUserId, string TerminalName, string TerminalIP, int DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/CheckUserExist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CheckUserExist(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/GetPhoneNoByUserId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPhoneNoByUserId(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bme319.org/SetPatName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetPatName(string UserId, string UserName);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class PatientDetailInfo1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIdField;
        
        private string phoneNumberField;
        
        private string homeAddressField;
        
        private string occupationField;
        
        private string nationalityField;
        
        private string emergencyContactField;
        
        private string emergencyContactPhoneNumberField;
        
        private string photoAddressField;
        
        private string moduleField;
        
        private string iDNoField;
        
        private string heightField;
        
        private string weightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
                this.RaisePropertyChanged("PhoneNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string HomeAddress {
            get {
                return this.homeAddressField;
            }
            set {
                this.homeAddressField = value;
                this.RaisePropertyChanged("HomeAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
                this.RaisePropertyChanged("Occupation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
                this.RaisePropertyChanged("Nationality");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string EmergencyContact {
            get {
                return this.emergencyContactField;
            }
            set {
                this.emergencyContactField = value;
                this.RaisePropertyChanged("EmergencyContact");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string EmergencyContactPhoneNumber {
            get {
                return this.emergencyContactPhoneNumberField;
            }
            set {
                this.emergencyContactPhoneNumberField = value;
                this.RaisePropertyChanged("EmergencyContactPhoneNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string PhotoAddress {
            get {
                return this.photoAddressField;
            }
            set {
                this.photoAddressField = value;
                this.RaisePropertyChanged("PhotoAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
                this.RaisePropertyChanged("Module");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string IDNo {
            get {
                return this.iDNoField;
            }
            set {
                this.iDNoField = value;
                this.RaisePropertyChanged("IDNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
                this.RaisePropertyChanged("Height");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
                this.RaisePropertyChanged("Weight");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class DoctorDetailInfo0 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIdField;
        
        private string phoneNumberField;
        
        private string homeAddressField;
        
        private string occupationField;
        
        private string nationalityField;
        
        private string emergencyContactField;
        
        private string emergencyContactPhoneNumberField;
        
        private string photoAddressField;
        
        private string moduleField;
        
        private string iDNoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
                this.RaisePropertyChanged("PhoneNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string HomeAddress {
            get {
                return this.homeAddressField;
            }
            set {
                this.homeAddressField = value;
                this.RaisePropertyChanged("HomeAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
                this.RaisePropertyChanged("Occupation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
                this.RaisePropertyChanged("Nationality");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string EmergencyContact {
            get {
                return this.emergencyContactField;
            }
            set {
                this.emergencyContactField = value;
                this.RaisePropertyChanged("EmergencyContact");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string EmergencyContactPhoneNumber {
            get {
                return this.emergencyContactPhoneNumberField;
            }
            set {
                this.emergencyContactPhoneNumberField = value;
                this.RaisePropertyChanged("EmergencyContactPhoneNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string PhotoAddress {
            get {
                return this.photoAddressField;
            }
            set {
                this.photoAddressField = value;
                this.RaisePropertyChanged("PhotoAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
                this.RaisePropertyChanged("Module");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string IDNo {
            get {
                return this.iDNoField;
            }
            set {
                this.iDNoField = value;
                this.RaisePropertyChanged("IDNo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class PatientALLBasicInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIdField;
        
        private string userNameField;
        
        private int birthdayField;
        
        private string genderField;
        
        private string bloodTypeField;
        
        private string iDNoField;
        
        private string doctorIdField;
        
        private string insuranceTypeField;
        
        private int invalidFlagField;
        
        private string moduleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
                this.RaisePropertyChanged("Birthday");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
                this.RaisePropertyChanged("Gender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string BloodType {
            get {
                return this.bloodTypeField;
            }
            set {
                this.bloodTypeField = value;
                this.RaisePropertyChanged("BloodType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string IDNo {
            get {
                return this.iDNoField;
            }
            set {
                this.iDNoField = value;
                this.RaisePropertyChanged("IDNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DoctorId {
            get {
                return this.doctorIdField;
            }
            set {
                this.doctorIdField = value;
                this.RaisePropertyChanged("DoctorId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string InsuranceType {
            get {
                return this.insuranceTypeField;
            }
            set {
                this.insuranceTypeField = value;
                this.RaisePropertyChanged("InsuranceType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int InvalidFlag {
            get {
                return this.invalidFlagField;
            }
            set {
                this.invalidFlagField = value;
                this.RaisePropertyChanged("InvalidFlag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
                this.RaisePropertyChanged("Module");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class PatientDetailInfo0 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIdField;
        
        private string phoneNumberField;
        
        private string homeAddressField;
        
        private string occupationField;
        
        private string nationalityField;
        
        private string emergencyContactField;
        
        private string emergencyContactPhoneNumberField;
        
        private string photoAddressField;
        
        private string moduleField;
        
        private string iDNoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
                this.RaisePropertyChanged("PhoneNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string HomeAddress {
            get {
                return this.homeAddressField;
            }
            set {
                this.homeAddressField = value;
                this.RaisePropertyChanged("HomeAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
                this.RaisePropertyChanged("Occupation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
                this.RaisePropertyChanged("Nationality");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string EmergencyContact {
            get {
                return this.emergencyContactField;
            }
            set {
                this.emergencyContactField = value;
                this.RaisePropertyChanged("EmergencyContact");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string EmergencyContactPhoneNumber {
            get {
                return this.emergencyContactPhoneNumberField;
            }
            set {
                this.emergencyContactPhoneNumberField = value;
                this.RaisePropertyChanged("EmergencyContactPhoneNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string PhotoAddress {
            get {
                return this.photoAddressField;
            }
            set {
                this.photoAddressField = value;
                this.RaisePropertyChanged("PhotoAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
                this.RaisePropertyChanged("Module");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string IDNo {
            get {
                return this.iDNoField;
            }
            set {
                this.iDNoField = value;
                this.RaisePropertyChanged("IDNo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class PatientBasicInfo0 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIdField;
        
        private string userNameField;
        
        private string birthdayField;
        
        private string genderField;
        
        private string iDNoField;
        
        private string moduleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
                this.RaisePropertyChanged("Birthday");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
                this.RaisePropertyChanged("Gender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string IDNo {
            get {
                return this.iDNoField;
            }
            set {
                this.iDNoField = value;
                this.RaisePropertyChanged("IDNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
                this.RaisePropertyChanged("Module");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class Message : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageNoField;
        
        private string sendByField;
        
        private string sendByNameField;
        
        private string sendDateTimeField;
        
        private string titleField;
        
        private string contentField;
        
        private string recieverField;
        
        private string recieverNameField;
        
        private string flagField;
        
        private string sMSFlagField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string MessageNo {
            get {
                return this.messageNoField;
            }
            set {
                this.messageNoField = value;
                this.RaisePropertyChanged("MessageNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SendBy {
            get {
                return this.sendByField;
            }
            set {
                this.sendByField = value;
                this.RaisePropertyChanged("SendBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string SendByName {
            get {
                return this.sendByNameField;
            }
            set {
                this.sendByNameField = value;
                this.RaisePropertyChanged("SendByName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string SendDateTime {
            get {
                return this.sendDateTimeField;
            }
            set {
                this.sendDateTimeField = value;
                this.RaisePropertyChanged("SendDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
                this.RaisePropertyChanged("Content");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Reciever {
            get {
                return this.recieverField;
            }
            set {
                this.recieverField = value;
                this.RaisePropertyChanged("Reciever");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string RecieverName {
            get {
                return this.recieverNameField;
            }
            set {
                this.recieverNameField = value;
                this.RaisePropertyChanged("RecieverName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Flag {
            get {
                return this.flagField;
            }
            set {
                this.flagField = value;
                this.RaisePropertyChanged("Flag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string SMSFlag {
            get {
                return this.sMSFlagField;
            }
            set {
                this.sMSFlagField = value;
                this.RaisePropertyChanged("SMSFlag");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class PatientBasicInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIdField;
        
        private string userNameField;
        
        private string ageField;
        
        private string genderField;
        
        private string bloodTypeField;
        
        private string insuranceTypeField;
        
        private string birthdayField;
        
        private string genderTextField;
        
        private string bloodTypeTextField;
        
        private string insuranceTypeTextField;
        
        private string moduleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
                this.RaisePropertyChanged("Age");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
                this.RaisePropertyChanged("Gender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string BloodType {
            get {
                return this.bloodTypeField;
            }
            set {
                this.bloodTypeField = value;
                this.RaisePropertyChanged("BloodType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string InsuranceType {
            get {
                return this.insuranceTypeField;
            }
            set {
                this.insuranceTypeField = value;
                this.RaisePropertyChanged("InsuranceType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
                this.RaisePropertyChanged("Birthday");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string GenderText {
            get {
                return this.genderTextField;
            }
            set {
                this.genderTextField = value;
                this.RaisePropertyChanged("GenderText");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string BloodTypeText {
            get {
                return this.bloodTypeTextField;
            }
            set {
                this.bloodTypeTextField = value;
                this.RaisePropertyChanged("BloodTypeText");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string InsuranceTypeText {
            get {
                return this.insuranceTypeTextField;
            }
            set {
                this.insuranceTypeTextField = value;
                this.RaisePropertyChanged("InsuranceTypeText");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
                this.RaisePropertyChanged("Module");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class SignShow : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string signNameField;
        
        private string signCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SignName {
            get {
                return this.signNameField;
            }
            set {
                this.signNameField = value;
                this.RaisePropertyChanged("SignName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SignCode {
            get {
                return this.signCodeField;
            }
            set {
                this.signCodeField = value;
                this.RaisePropertyChanged("SignCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class Guide : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueField;
        
        private string toValueField;
        
        private string labelField;
        
        private string lineColorField;
        
        private string lineAlphaField;
        
        private string dashLengthField;
        
        private string colorField;
        
        private string fontSizeField;
        
        private string positionField;
        
        private string insideField;
        
        private string fillAlphaField;
        
        private string fillColorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string toValue {
            get {
                return this.toValueField;
            }
            set {
                this.toValueField = value;
                this.RaisePropertyChanged("toValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
                this.RaisePropertyChanged("label");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string lineColor {
            get {
                return this.lineColorField;
            }
            set {
                this.lineColorField = value;
                this.RaisePropertyChanged("lineColor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string lineAlpha {
            get {
                return this.lineAlphaField;
            }
            set {
                this.lineAlphaField = value;
                this.RaisePropertyChanged("lineAlpha");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string dashLength {
            get {
                return this.dashLengthField;
            }
            set {
                this.dashLengthField = value;
                this.RaisePropertyChanged("dashLength");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
                this.RaisePropertyChanged("color");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string fontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
                this.RaisePropertyChanged("fontSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
                this.RaisePropertyChanged("position");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string inside {
            get {
                return this.insideField;
            }
            set {
                this.insideField = value;
                this.RaisePropertyChanged("inside");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string fillAlpha {
            get {
                return this.fillAlphaField;
            }
            set {
                this.fillAlphaField = value;
                this.RaisePropertyChanged("fillAlpha");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string fillColor {
            get {
                return this.fillColorField;
            }
            set {
                this.fillColorField = value;
                this.RaisePropertyChanged("fillColor");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class GraphGuide : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Guide[] guideListField;
        
        private string originalField;
        
        private string targetField;
        
        private double minimumField;
        
        private double maximumField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public Guide[] GuideList {
            get {
                return this.guideListField;
            }
            set {
                this.guideListField = value;
                this.RaisePropertyChanged("GuideList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string original {
            get {
                return this.originalField;
            }
            set {
                this.originalField = value;
                this.RaisePropertyChanged("original");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
                this.RaisePropertyChanged("target");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double minimum {
            get {
                return this.minimumField;
            }
            set {
                this.minimumField = value;
                this.RaisePropertyChanged("minimum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double maximum {
            get {
                return this.maximumField;
            }
            set {
                this.maximumField = value;
                this.RaisePropertyChanged("maximum");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class Graph : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dateField;
        
        private string signValueField;
        
        private string signGradeField;
        
        private string signColorField;
        
        private string signShapeField;
        
        private string signDescriptionField;
        
        private string drugValueField;
        
        private string drugBulletField;
        
        private string drugColorField;
        
        private string drugDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SignValue {
            get {
                return this.signValueField;
            }
            set {
                this.signValueField = value;
                this.RaisePropertyChanged("SignValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string SignGrade {
            get {
                return this.signGradeField;
            }
            set {
                this.signGradeField = value;
                this.RaisePropertyChanged("SignGrade");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string SignColor {
            get {
                return this.signColorField;
            }
            set {
                this.signColorField = value;
                this.RaisePropertyChanged("SignColor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string SignShape {
            get {
                return this.signShapeField;
            }
            set {
                this.signShapeField = value;
                this.RaisePropertyChanged("SignShape");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string SignDescription {
            get {
                return this.signDescriptionField;
            }
            set {
                this.signDescriptionField = value;
                this.RaisePropertyChanged("SignDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DrugValue {
            get {
                return this.drugValueField;
            }
            set {
                this.drugValueField = value;
                this.RaisePropertyChanged("DrugValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string DrugBullet {
            get {
                return this.drugBulletField;
            }
            set {
                this.drugBulletField = value;
                this.RaisePropertyChanged("DrugBullet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string DrugColor {
            get {
                return this.drugColorField;
            }
            set {
                this.drugColorField = value;
                this.RaisePropertyChanged("DrugColor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string DrugDescription {
            get {
                return this.drugDescriptionField;
            }
            set {
                this.drugDescriptionField = value;
                this.RaisePropertyChanged("DrugDescription");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class ChartData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Graph[] graphListField;
        
        private GraphGuide graphGuideField;
        
        private string otherTasksField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public Graph[] GraphList {
            get {
                return this.graphListField;
            }
            set {
                this.graphListField = value;
                this.RaisePropertyChanged("GraphList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public GraphGuide GraphGuide {
            get {
                return this.graphGuideField;
            }
            set {
                this.graphGuideField = value;
                this.RaisePropertyChanged("GraphGuide");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string OtherTasks {
            get {
                return this.otherTasksField;
            }
            set {
                this.otherTasksField = value;
                this.RaisePropertyChanged("OtherTasks");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class TaskDeatil : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string taskTypeField;
        
        private string taskIdField;
        
        private string taskNameField;
        
        private string instructionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TaskType {
            get {
                return this.taskTypeField;
            }
            set {
                this.taskTypeField = value;
                this.RaisePropertyChanged("TaskType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TaskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
                this.RaisePropertyChanged("TaskId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TaskName {
            get {
                return this.taskNameField;
            }
            set {
                this.taskNameField = value;
                this.RaisePropertyChanged("TaskName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Instruction {
            get {
                return this.instructionField;
            }
            set {
                this.instructionField = value;
                this.RaisePropertyChanged("Instruction");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class Task : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string taskTypeField;
        
        private TaskDeatil[] taskDeatilListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TaskType {
            get {
                return this.taskTypeField;
            }
            set {
                this.taskTypeField = value;
                this.RaisePropertyChanged("TaskType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public TaskDeatil[] TaskDeatilList {
            get {
                return this.taskDeatilListField;
            }
            set {
                this.taskDeatilListField = value;
                this.RaisePropertyChanged("TaskDeatilList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class PatientInfo1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string patientNameField;
        
        private string imageUrlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
                this.RaisePropertyChanged("PatientName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
                this.RaisePropertyChanged("ImageUrl");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class ImplementationInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PatientInfo1 patientInfoField;
        
        private string progressRateField;
        
        private string remainingDaysField;
        
        private string compliacneValueField;
        
        private int startDateField;
        
        private int endDateField;
        
        private PlanDeatil[] planListField;
        
        private Task[] taskListField;
        
        private ChartData chartDataField;
        
        private SignShow[] signListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public PatientInfo1 PatientInfo {
            get {
                return this.patientInfoField;
            }
            set {
                this.patientInfoField = value;
                this.RaisePropertyChanged("PatientInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ProgressRate {
            get {
                return this.progressRateField;
            }
            set {
                this.progressRateField = value;
                this.RaisePropertyChanged("ProgressRate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string RemainingDays {
            get {
                return this.remainingDaysField;
            }
            set {
                this.remainingDaysField = value;
                this.RaisePropertyChanged("RemainingDays");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CompliacneValue {
            get {
                return this.compliacneValueField;
            }
            set {
                this.compliacneValueField = value;
                this.RaisePropertyChanged("CompliacneValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("StartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
                this.RaisePropertyChanged("EndDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public PlanDeatil[] PlanList {
            get {
                return this.planListField;
            }
            set {
                this.planListField = value;
                this.RaisePropertyChanged("PlanList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=7)]
        public Task[] TaskList {
            get {
                return this.taskListField;
            }
            set {
                this.taskListField = value;
                this.RaisePropertyChanged("TaskList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public ChartData ChartData {
            get {
                return this.chartDataField;
            }
            set {
                this.chartDataField = value;
                this.RaisePropertyChanged("ChartData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public SignShow[] SignList {
            get {
                return this.signListField;
            }
            set {
                this.signListField = value;
                this.RaisePropertyChanged("SignList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class PlanDeatil : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string planNameField;
        
        private string planNoField;
        
        private int startDateField;
        
        private int endDateField;
        
        private string moduleField;
        
        private string statusField;
        
        private string doctorIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PlanName {
            get {
                return this.planNameField;
            }
            set {
                this.planNameField = value;
                this.RaisePropertyChanged("PlanName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PlanNo {
            get {
                return this.planNoField;
            }
            set {
                this.planNoField = value;
                this.RaisePropertyChanged("PlanNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("StartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
                this.RaisePropertyChanged("EndDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
                this.RaisePropertyChanged("Module");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DoctorId {
            get {
                return this.doctorIdField;
            }
            set {
                this.doctorIdField = value;
                this.RaisePropertyChanged("DoctorId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class TaskDetailInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string parentCodeField;
        
        private string descriptionField;
        
        private int groupHeaderFlagField;
        
        private int controlTypeField;
        
        private string optionCategoryField;
        
        private System.DateTime createDateTimeField;
        
        private string authorField;
        
        private string authorNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ParentCode {
            get {
                return this.parentCodeField;
            }
            set {
                this.parentCodeField = value;
                this.RaisePropertyChanged("ParentCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int GroupHeaderFlag {
            get {
                return this.groupHeaderFlagField;
            }
            set {
                this.groupHeaderFlagField = value;
                this.RaisePropertyChanged("GroupHeaderFlag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int ControlType {
            get {
                return this.controlTypeField;
            }
            set {
                this.controlTypeField = value;
                this.RaisePropertyChanged("ControlType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string OptionCategory {
            get {
                return this.optionCategoryField;
            }
            set {
                this.optionCategoryField = value;
                this.RaisePropertyChanged("OptionCategory");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime CreateDateTime {
            get {
                return this.createDateTimeField;
            }
            set {
                this.createDateTimeField = value;
                this.RaisePropertyChanged("CreateDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
                this.RaisePropertyChanged("Author");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string AuthorName {
            get {
                return this.authorNameField;
            }
            set {
                this.authorNameField = value;
                this.RaisePropertyChanged("AuthorName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class MstBloodPressure : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string nameField;
        
        private string descriptionField;
        
        private int sBPField;
        
        private int dBPField;
        
        private string patientClassField;
        
        private string redundanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int SBP {
            get {
                return this.sBPField;
            }
            set {
                this.sBPField = value;
                this.RaisePropertyChanged("SBP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int DBP {
            get {
                return this.dBPField;
            }
            set {
                this.dBPField = value;
                this.RaisePropertyChanged("DBP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string PatientClass {
            get {
                return this.patientClassField;
            }
            set {
                this.patientClassField = value;
                this.RaisePropertyChanged("PatientClass");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Redundance {
            get {
                return this.redundanceField;
            }
            set {
                this.redundanceField = value;
                this.RaisePropertyChanged("Redundance");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class SomeDayEvent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string timeField;
        
        private string typeField;
        
        private string eventField;
        
        private string keyCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("Time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Event {
            get {
                return this.eventField;
            }
            set {
                this.eventField = value;
                this.RaisePropertyChanged("Event");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string KeyCode {
            get {
                return this.keyCodeField;
            }
            set {
                this.keyCodeField = value;
                this.RaisePropertyChanged("KeyCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class ClinicBasicInfoandTime : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string timeField;
        
        private SomeDayEvent[] itemGroupField;
        
        private string tagField;
        
        private string colorField;
        
        private string visitIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("Time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public SomeDayEvent[] ItemGroup {
            get {
                return this.itemGroupField;
            }
            set {
                this.itemGroupField = value;
                this.RaisePropertyChanged("ItemGroup");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
                this.RaisePropertyChanged("Tag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
                this.RaisePropertyChanged("Color");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class Clinic : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIdField;
        
        private ClinicBasicInfoandTime[] historyField;
        
        private string admissionDateMarkField;
        
        private string clinicDateMarkField;
        
        private string mark_contitueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public ClinicBasicInfoandTime[] History {
            get {
                return this.historyField;
            }
            set {
                this.historyField = value;
                this.RaisePropertyChanged("History");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string AdmissionDateMark {
            get {
                return this.admissionDateMarkField;
            }
            set {
                this.admissionDateMarkField = value;
                this.RaisePropertyChanged("AdmissionDateMark");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ClinicDateMark {
            get {
                return this.clinicDateMarkField;
            }
            set {
                this.clinicDateMarkField = value;
                this.RaisePropertyChanged("ClinicDateMark");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string mark_contitue {
            get {
                return this.mark_contitueField;
            }
            set {
                this.mark_contitueField = value;
                this.RaisePropertyChanged("mark_contitue");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class VitalSigns : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string typeField;
        
        private string codeField;
        
        private string typeNameField;
        
        private string nameField;
        
        private string inputCodeField;
        
        private string sortNoField;
        
        private string redundanceField;
        
        private string invalidFlagField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
                this.RaisePropertyChanged("TypeName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string InputCode {
            get {
                return this.inputCodeField;
            }
            set {
                this.inputCodeField = value;
                this.RaisePropertyChanged("InputCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string SortNo {
            get {
                return this.sortNoField;
            }
            set {
                this.sortNoField = value;
                this.RaisePropertyChanged("SortNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Redundance {
            get {
                return this.redundanceField;
            }
            set {
                this.redundanceField = value;
                this.RaisePropertyChanged("Redundance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string InvalidFlag {
            get {
                return this.invalidFlagField;
            }
            set {
                this.invalidFlagField = value;
                this.RaisePropertyChanged("InvalidFlag");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class WnMstAlert : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string alertItemNameField;
        
        private string minField;
        
        private string maxField;
        
        private string unitsField;
        
        private string remarksField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AlertItemName {
            get {
                return this.alertItemNameField;
            }
            set {
                this.alertItemNameField = value;
                this.RaisePropertyChanged("AlertItemName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
                this.RaisePropertyChanged("Min");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
                this.RaisePropertyChanged("Max");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
                this.RaisePropertyChanged("Units");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
                this.RaisePropertyChanged("Remarks");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bme319.org/")]
    public partial class DoctorDetailInfo1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string iDNoField;
        
        private string photoAddressField;
        
        private string unitNameField;
        
        private string jobTitleField;
        
        private string levelField;
        
        private string deptField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string IDNo {
            get {
                return this.iDNoField;
            }
            set {
                this.iDNoField = value;
                this.RaisePropertyChanged("IDNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PhotoAddress {
            get {
                return this.photoAddressField;
            }
            set {
                this.photoAddressField = value;
                this.RaisePropertyChanged("PhotoAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UnitName {
            get {
                return this.unitNameField;
            }
            set {
                this.unitNameField = value;
                this.RaisePropertyChanged("UnitName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string JobTitle {
            get {
                return this.jobTitleField;
            }
            set {
                this.jobTitleField = value;
                this.RaisePropertyChanged("JobTitle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Dept {
            get {
                return this.deptField;
            }
            set {
                this.deptField = value;
                this.RaisePropertyChanged("Dept");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpLoadImage", WrapperNamespace="http://bme319.org/", IsWrapped=true)]
    public partial class UpLoadImageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://bme319.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://bme319.org/", Order=1)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://bme319.org/", Order=2)]
        public string requestPath;
        
        public UpLoadImageRequest() {
        }
        
        public UpLoadImageRequest(byte[] fs, string fileName, string requestPath) {
            this.fs = fs;
            this.fileName = fileName;
            this.requestPath = requestPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpLoadImageResponse", WrapperNamespace="http://bme319.org/", IsWrapped=true)]
    public partial class UpLoadImageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://bme319.org/", Order=0)]
        public string UpLoadImageResult;
        
        public UpLoadImageResponse() {
        }
        
        public UpLoadImageResponse(string UpLoadImageResult) {
            this.UpLoadImageResult = UpLoadImageResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServicesSoapChannel : CDMIS.ServiceReference.ServicesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicesSoapClient : System.ServiceModel.ClientBase<CDMIS.ServiceReference.ServicesSoap>, CDMIS.ServiceReference.ServicesSoap {
        
        public ServicesSoapClient() {
        }
        
        public ServicesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetTmpLabSubItemByStatus(int Status) {
            return base.Channel.GetTmpLabSubItemByStatus(Status);
        }
        
        public bool SetMpLabSubItemCmp(string HospitalCode, string HZCode, string Code, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetMpLabSubItemCmp(HospitalCode, HZCode, Code, Redundance, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool ChangeStatusForTmpLabSubItem(string HospitalCode, string Code, int Status) {
            return base.Channel.ChangeStatusForTmpLabSubItem(HospitalCode, Code, Status);
        }
        
        public System.Data.DataSet GetMpLabSubItemCmp() {
            return base.Channel.GetMpLabSubItemCmp();
        }
        
        public bool SetLabSubItem(string Code, string Name, int SortNo, string InputCode, string Description, int InvalidFlag) {
            return base.Channel.SetLabSubItem(Code, Name, SortNo, InputCode, Description, InvalidFlag);
        }
        
        public string GetLabSubItemName(string Code) {
            return base.Channel.GetLabSubItemName(Code);
        }
        
        public System.Data.DataSet GetTmpExamItemByStatus(int Status) {
            return base.Channel.GetTmpExamItemByStatus(Status);
        }
        
        public bool SetMpExamItemCmp(string HospitalCode, string HZCode, string Code, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetMpExamItemCmp(HospitalCode, HZCode, Code, Redundance, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool ChangeStatusForTmpExamItem(string HospitalCode, string Code, int Status) {
            return base.Channel.ChangeStatusForTmpExamItem(HospitalCode, Code, Status);
        }
        
        public System.Data.DataSet GetMpExamItemCmp() {
            return base.Channel.GetMpExamItemCmp();
        }
        
        public bool SetExaminationSubItemS(string Code, string Name, int SortNo, string InputCode, string Description, int InvalidFlag) {
            return base.Channel.SetExaminationSubItemS(Code, Name, SortNo, InputCode, Description, InvalidFlag);
        }
        
        public string GetExamSubItemName(string Code) {
            return base.Channel.GetExamSubItemName(Code);
        }
        
        public System.Data.DataSet GetTmpExaminationByStatus(int Status) {
            return base.Channel.GetTmpExaminationByStatus(Status);
        }
        
        public bool SetMpExaminationCmp(string HospitalCode, string HZCode, string Type, string Code, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetMpExaminationCmp(HospitalCode, HZCode, Type, Code, Redundance, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool ChangeStatusForTmpExamination(string HospitalCode, string Code, int Status) {
            return base.Channel.ChangeStatusForTmpExamination(HospitalCode, Code, Status);
        }
        
        public System.Data.DataSet GetMpExaminationCmp() {
            return base.Channel.GetMpExaminationCmp();
        }
        
        public bool SetExamItem(string Type, string Code, string TypeName, string Name, int SortNo, string InputCode, string Description, int InvalidFlag) {
            return base.Channel.SetExamItem(Type, Code, TypeName, Name, SortNo, InputCode, Description, InvalidFlag);
        }
        
        public string GetExamItemTypeNameByType(string Type) {
            return base.Channel.GetExamItemTypeNameByType(Type);
        }
        
        public string GetExamItemName(string Type, string Code) {
            return base.Channel.GetExamItemName(Type, Code);
        }
        
        public bool SetMpVitalSignsCmp(string piHospitalCode, string piHZCode, string piType, string piCode, string piDescription, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetMpVitalSignsCmp(piHospitalCode, piHZCode, piType, piCode, piDescription, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetMpOperationCmp(string piHospitalCode, string piHZCode, string piCode, string piDescription, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetMpOperationCmp(piHospitalCode, piHZCode, piCode, piDescription, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetOperation(string piCode, string piName, string piInputCode, string piDescription, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetOperation(piCode, piName, piInputCode, piDescription, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public string GetOperationName(string Code) {
            return base.Channel.GetOperationName(Code);
        }
        
        public System.Data.DataSet GetOperation() {
            return base.Channel.GetOperation();
        }
        
        public bool ChangeStatusForTmpOperation(string HospitalCode, string Code, int Status) {
            return base.Channel.ChangeStatusForTmpOperation(HospitalCode, Code, Status);
        }
        
        public System.Data.DataSet GetTmpOperationByStatus(int Status) {
            return base.Channel.GetTmpOperationByStatus(Status);
        }
        
        public System.Data.DataSet GetMpOperationCmp() {
            return base.Channel.GetMpOperationCmp();
        }
        
        public System.Data.DataSet GetMpVitalSignsCmp() {
            return base.Channel.GetMpVitalSignsCmp();
        }
        
        public string GetVitalSignsTypeNamebyType(string Type) {
            return base.Channel.GetVitalSignsTypeNamebyType(Type);
        }
        
        public string GetVitalSignsName(string Type, string Code) {
            return base.Channel.GetVitalSignsName(Type, Code);
        }
        
        public System.Data.DataSet GetDivision() {
            return base.Channel.GetDivision();
        }
        
        public bool SetDivision(int piType, string piCode, string piTypeName, string piName, string piInputCode, string piDescription, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetDivision(piType, piCode, piTypeName, piName, piInputCode, piDescription, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetTmpDivisionDict(string HospitalCode, string Type, string Code, string TypeName, string Name, string InputCode, string Description, int Status, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetTmpDivisionDict(HospitalCode, Type, Code, TypeName, Name, InputCode, Description, Status, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool ChangeStatusForTmpDivision(string HospitalCode, string Type, string Code, int Status) {
            return base.Channel.ChangeStatusForTmpDivision(HospitalCode, Type, Code, Status);
        }
        
        public System.Data.DataSet GetTmpDivisionByStatus(int Status) {
            return base.Channel.GetTmpDivisionByStatus(Status);
        }
        
        public bool SetMpDivisionCmp(string HospitalCode, int Type, string Code, string HZCode, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetMpDivisionCmp(HospitalCode, Type, Code, HZCode, Redundance, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool DeleteMpDivisionCmp(string HospitalCode, string HZCode) {
            return base.Channel.DeleteMpDivisionCmp(HospitalCode, HZCode);
        }
        
        public System.Data.DataSet GetMpDivisionCmp() {
            return base.Channel.GetMpDivisionCmp();
        }
        
        public string GetDivisionNamebyCode(string Code) {
            return base.Channel.GetDivisionNamebyCode(Code);
        }
        
        public string GetDivisionTypeNamebyType(int Type) {
            return base.Channel.GetDivisionTypeNamebyType(Type);
        }
        
        public bool SetDiagnosis(string Type, string Code, string TypeName, string Name, string InputCode, string Redundance, int InvalidFlag) {
            return base.Channel.SetDiagnosis(Type, Code, TypeName, Name, InputCode, Redundance, InvalidFlag);
        }
        
        public System.Data.DataSet GetDiagnosis() {
            return base.Channel.GetDiagnosis();
        }
        
        public string GetDiagnosisNamebyCode(string Code) {
            return base.Channel.GetDiagnosisNamebyCode(Code);
        }
        
        public string GetDiagnosisTypeNamebyType(string Type) {
            return base.Channel.GetDiagnosisTypeNamebyType(Type);
        }
        
        public bool ChangeStatusForTmpDiagnosis(string HospitalCode, string Code, int Status) {
            return base.Channel.ChangeStatusForTmpDiagnosis(HospitalCode, Code, Status);
        }
        
        public System.Data.DataSet GetTmpDiagnosisByStatus(int Status) {
            return base.Channel.GetTmpDiagnosisByStatus(Status);
        }
        
        public bool SetMpDiagnosisCmp(string HospitalCode, string HZCode, string Type, string Code, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetMpDiagnosisCmp(HospitalCode, HZCode, Type, Code, Redundance, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetMpDiagnosisCmp() {
            return base.Channel.GetMpDiagnosisCmp();
        }
        
        public string sendSMS(string mobile, string smsType, string content) {
            return base.Channel.sendSMS(mobile, smsType, content);
        }
        
        public int checkverification(string mobile, string smsType, string verification) {
            return base.Channel.checkverification(mobile, smsType, verification);
        }
        
        public CDMIS.ServiceReference.PatientDetailInfo1 GetPatientDetailInfo(string UserId) {
            return base.Channel.GetPatientDetailInfo(UserId);
        }
        
        public CDMIS.ServiceReference.DoctorDetailInfo1 GetDoctorDetailInfo(string Doctor) {
            return base.Channel.GetDoctorDetailInfo(Doctor);
        }
        
        public bool SetPatBasicInfoDetail(string Patient, string CategoryCode, string ItemCode, int ItemSeq, string Value, string Description, int SortNo, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetPatBasicInfoDetail(Patient, CategoryCode, ItemCode, ItemSeq, Value, Description, SortNo, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetPatBasicInfoDtlList(string UserId) {
            return base.Channel.GetPatBasicInfoDtlList(UserId);
        }
        
        public int DeleteModuleDetail(string Patient, string CategoryCode) {
            return base.Channel.DeleteModuleDetail(Patient, CategoryCode);
        }
        
        public System.Data.DataSet SynBasicInfoDetail(string UserId) {
            return base.Channel.SynBasicInfoDetail(UserId);
        }
        
        public System.Data.DataSet SynBasicInfoDetailForM2(string UserId) {
            return base.Channel.SynBasicInfoDetailForM2(UserId);
        }
        
        public System.Data.DataSet SynBasicInfoDetailForM3(string UserId) {
            return base.Channel.SynBasicInfoDetailForM3(UserId);
        }
        
        public System.Data.DataSet GetClinicalInfo(string UserId) {
            return base.Channel.GetClinicalInfo(UserId);
        }
        
        public System.Data.DataSet GetDiagnosisInfo(string UserId, string VisitId) {
            return base.Channel.GetDiagnosisInfo(UserId, VisitId);
        }
        
        public System.Data.DataSet GetExaminationInfo(string UserId, string VisitId) {
            return base.Channel.GetExaminationInfo(UserId, VisitId);
        }
        
        public System.Data.DataSet GetLabTestInfo(string UserId, string VisitId) {
            return base.Channel.GetLabTestInfo(UserId, VisitId);
        }
        
        public System.Data.DataSet GetDrugRecord(string UserId, string VisitId) {
            return base.Channel.GetDrugRecord(UserId, VisitId);
        }
        
        public CDMIS.ServiceReference.WnMstAlert GetWnMstBasicAlert(string AlertItemCode) {
            return base.Channel.GetWnMstBasicAlert(AlertItemCode);
        }
        
        public int GetMPAMaxSortNo(string UserId, string AlertItemCode) {
            return base.Channel.GetMPAMaxSortNo(UserId, AlertItemCode);
        }
        
        public bool SetPsPatient2VS(string UserId, string VitalSignsType, string VitalSignsCode, int InvalidFlag, int SortNo, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetPsPatient2VS(UserId, VitalSignsType, VitalSignsCode, InvalidFlag, SortNo, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public bool SetPatientVitalSigns(string UserId, int RecordDate, int RecordTime, string ItemType, string ItemCode, string Value, string Unit, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetPatientVitalSigns(UserId, RecordDate, RecordTime, ItemType, ItemCode, Value, Unit, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetPatient2VS(string UserId) {
            return base.Channel.GetPatient2VS(UserId);
        }
        
        public System.Data.DataSet GetPatientVitalSigns(string UserId, string ItemType, string ItemCode) {
            return base.Channel.GetPatientVitalSigns(UserId, ItemType, ItemCode);
        }
        
        public System.Data.DataSet GetPatientVitalSignsAndThreshold(string UserId, string ItemType, string ItemCode) {
            return base.Channel.GetPatientVitalSignsAndThreshold(UserId, ItemType, ItemCode);
        }
        
        public CDMIS.ServiceReference.WnMstAlert GetWnMstAlert(string UserId, string AlertItemCode, int CheckDate) {
            return base.Channel.GetWnMstAlert(UserId, AlertItemCode, CheckDate);
        }
        
        public bool SetWnMstPersonalAlert(string UserId, string AlertItemCode, int SortNo, decimal Min, decimal Max, string Units, int StartDate, int EndDate, string Remarks, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType) {
            return base.Channel.SetWnMstPersonalAlert(UserId, AlertItemCode, SortNo, Min, Max, Units, StartDate, EndDate, Remarks, revUserId, pTerminalName, pTerminalIP, pDeviceType);
        }
        
        public System.Data.DataSet GetPsTreatmentIndicators(string UserId) {
            return base.Channel.GetPsTreatmentIndicators(UserId);
        }
        
        public System.Data.DataSet GetParameters(string UserId, int SortNo) {
            return base.Channel.GetParameters(UserId, SortNo);
        }
        
        public bool UpdateReminder(
                    string PatientId, 
                    string ReminderNo, 
                    int ReminderType, 
                    int SortNo, 
                    string Content, 
                    int AlertMode, 
                    System.DateTime StartDateTime, 
                    int NextDate, 
                    int NextTime, 
                    int Interval, 
                    int InvalidFlag, 
                    string Description, 
                    string CreatedBy, 
                    string revUserId, 
                    string TerminalName, 
                    string TerminalIP, 
                    int DeviceType) {
            return base.Channel.UpdateReminder(PatientId, ReminderNo, ReminderType, SortNo, Content, AlertMode, StartDateTime, NextDate, NextTime, Interval, InvalidFlag, Description, CreatedBy, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetReminder(string PatientId) {
            return base.Channel.GetReminder(PatientId);
        }
        
        public int DeleteReminder(string piPatientId, string piReminderNo, string UserId, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.DeleteReminder(piPatientId, piReminderNo, UserId, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetReminder(int Type, string PatientId, string ReminderNo, int ReminderType, string Content, string StartDateTime, string Creater, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetReminder(Type, PatientId, ReminderNo, ReminderType, Content, StartDateTime, Creater, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetReminder_Once(int Type, string PatientId, string ReminderNo, int ReminderType, string Content, int AlertMode, string StartDateTime, System.DateTime OnceDateTime, string Creater, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetReminder_Once(Type, PatientId, ReminderNo, ReminderType, Content, AlertMode, StartDateTime, OnceDateTime, Creater, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetReminder_Everyday(int Type, string PatientId, string ReminderNo, int ReminderType, string Content, int AlertMode, string StartDateTime, string EveryDayTime, string Creater, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetReminder_Everyday(Type, PatientId, ReminderNo, ReminderType, Content, AlertMode, StartDateTime, EveryDayTime, Creater, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetReminder_Weekly(int Type, string PatientId, string ReminderNo, int ReminderType, string Content, int AlertMode, string StartDateTime, string WeeklyWeek, string WeeklyTime, string Creater, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetReminder_Weekly(Type, PatientId, ReminderNo, ReminderType, Content, AlertMode, StartDateTime, WeeklyWeek, WeeklyTime, Creater, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetReminder_Monthly(int Type, string PatientId, string ReminderNo, int ReminderType, string Content, int AlertMode, string StartDateTime, string MonthlyDay, string MonthlyTime, string Creater, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetReminder_Monthly(Type, PatientId, ReminderNo, ReminderType, Content, AlertMode, StartDateTime, MonthlyDay, MonthlyTime, Creater, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetReminder_Annual(int Type, string PatientId, string ReminderNo, int ReminderType, string Content, int AlertMode, string StartDateTime, string AnnualMonth, string AnnualDay, string AnnualTime, string Creater, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetReminder_Annual(Type, PatientId, ReminderNo, ReminderType, Content, AlertMode, StartDateTime, AnnualMonth, AnnualDay, AnnualTime, Creater, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetReminder_Interval(
                    int Type, 
                    string PatientId, 
                    string ReminderNo, 
                    int ReminderType, 
                    string Content, 
                    int AlertMode, 
                    string StartDateTime, 
                    int FreqYear, 
                    int FreqMonth, 
                    int FreqDay, 
                    int FreqHour, 
                    int FreqMunite, 
                    string Creater, 
                    string revUserId, 
                    string TerminalName, 
                    string TerminalIP, 
                    int DeviceType) {
            return base.Channel.SetReminder_Interval(Type, PatientId, ReminderNo, ReminderType, Content, AlertMode, StartDateTime, FreqYear, FreqMonth, FreqDay, FreqHour, FreqMunite, Creater, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public CDMIS.ServiceReference.VitalSigns GetDataByTC(string Type, string Code) {
            return base.Channel.GetDataByTC(Type, Code);
        }
        
        public CDMIS.ServiceReference.Clinic GetClinicalNew(string UserId, System.DateTime AdmissionDate, System.DateTime ClinicDate, int Num) {
            return base.Channel.GetClinicalNew(UserId, AdmissionDate, ClinicDate, Num);
        }
        
        public System.Data.DataSet GetClinicInfoDetail(string UserId, string Type, string VisitId, string Date) {
            return base.Channel.GetClinicInfoDetail(UserId, Type, VisitId, Date);
        }
        
        public void GetClinicalNewMobile(string UserId, System.DateTime AdmissionDate, System.DateTime ClinicDate, int Num) {
            base.Channel.GetClinicalNewMobile(UserId, AdmissionDate, ClinicDate, Num);
        }
        
        public int UpdateIsDone(string PatientId, string ReminderNo, int TaskDate, int TaskTime, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.UpdateIsDone(PatientId, ReminderNo, TaskDate, TaskTime, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int GetUndoneNum(string PatientId) {
            return base.Channel.GetUndoneNum(PatientId);
        }
        
        public System.Data.DataSet GetUndoneList(string PatientId) {
            return base.Channel.GetUndoneList(PatientId);
        }
        
        public System.Data.DataSet GetToDoList(string PatientId) {
            return base.Channel.GetToDoList(PatientId);
        }
        
        public System.Data.DataSet GetPsTarget(string PlanNo) {
            return base.Channel.GetPsTarget(PlanNo);
        }
        
        public System.Data.DataSet GetPsTaskByType(string PlanNo, string Type) {
            return base.Channel.GetPsTaskByType(PlanNo, Type);
        }
        
        public System.Data.DataSet GetDrugDetail(string Module) {
            return base.Channel.GetDrugDetail(Module);
        }
        
        public System.Data.DataSet GetLifeStyleDetail(string Module) {
            return base.Channel.GetLifeStyleDetail(Module);
        }
        
        public bool SetPsTask(string PlanNo, string Id, string Type, string Code, string Instruction, string UserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetPsTask(PlanNo, Id, Type, Code, Instruction, UserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool CreateTask(string PlanNo, string Task, string UserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.CreateTask(PlanNo, Task, UserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetPatientDrugRecord(string PatientId, string Module) {
            return base.Channel.GetPatientDrugRecord(PatientId, Module);
        }
        
        public int GetGoalValue(string PlanNo) {
            return base.Channel.GetGoalValue(PlanNo);
        }
        
        public string GetLatestPulseByPatientId(string PatientId) {
            return base.Channel.GetLatestPulseByPatientId(PatientId);
        }
        
        public string GetLatestSbpByPatientId(string PatientId) {
            return base.Channel.GetLatestSbpByPatientId(PatientId);
        }
        
        public string GetLatestDbpByPatientId(string PatientId) {
            return base.Channel.GetLatestDbpByPatientId(PatientId);
        }
        
        public int SetTarget(string Plan, string Id, string Type, string Code, string Value, string Origin, string Instruction, string Unit, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetTarget(Plan, Id, Type, Code, Value, Origin, Instruction, Unit, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public int SetPlan(string PlanNo, string PatientId, int StartDate, int EndDate, string Module, int Status, string DoctorId, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetPlan(PlanNo, PatientId, StartDate, EndDate, Module, Status, DoctorId, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public CDMIS.ServiceReference.MstBloodPressure[] GetBPGrades() {
            return base.Channel.GetBPGrades();
        }
        
        public string GetDescription(int SBP) {
            return base.Channel.GetDescription(SBP);
        }
        
        public string GetValueByPlanNoAndId(string PlanNo, string Id) {
            return base.Channel.GetValueByPlanNoAndId(PlanNo, Id);
        }
        
        public System.Data.DataSet GetRiskInput(string UserId) {
            return base.Channel.GetRiskInput(UserId);
        }
        
        public bool SetRiskResult(string UserId, int SortNo, string AssessmentType, string AssessmentName, System.DateTime AssessmentTime, string Result, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetRiskResult(UserId, SortNo, AssessmentType, AssessmentName, AssessmentTime, Result, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public string GetRiskResult(string UserId) {
            return base.Channel.GetRiskResult(UserId);
        }
        
        public int GetTaskNumber(string PatientId, string PlanNo, int PiStatus) {
            return base.Channel.GetTaskNumber(PatientId, PlanNo, PiStatus);
        }
        
        public System.Data.DataSet GetTaskByStatus(string PatientId, string PlanNo, int PiStatus) {
            return base.Channel.GetTaskByStatus(PatientId, PlanNo, PiStatus);
        }
        
        public string GetDateTimebyNow() {
            return base.Channel.GetDateTimebyNow();
        }
        
        public int SetComlianceDetail(string PatientId, int DateByNow, string PlanNo, string Id, int Status, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetComlianceDetail(PatientId, DateByNow, PlanNo, Id, Status, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public string GetPlanInfobyPID(string PatientId) {
            return base.Channel.GetPlanInfobyPID(PatientId);
        }
        
        public System.Data.DataSet GetOverDuePlanList(string DoctorId, string ModuleType) {
            return base.Channel.GetOverDuePlanList(DoctorId, ModuleType);
        }
        
        public System.Data.DataSet GetPatientsList(string DoctorId, string ModuleType, int Plan, int Compliance, int Goal) {
            return base.Channel.GetPatientsList(DoctorId, ModuleType, Plan, Compliance, Goal);
        }
        
        public bool SetHealthEducation(string Module, string HealthId, int Type, string FileName, string Path, string Introduction, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetHealthEducation(Module, HealthId, Type, FileName, Path, Introduction, Redundance, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetVedioAddressList(string Module) {
            return base.Channel.GetVedioAddressList(Module);
        }
        
        public System.Data.DataSet GetTextAddressList(string Module) {
            return base.Channel.GetTextAddressList(Module);
        }
        
        public System.Data.DataSet GetImageAddressList(string Module) {
            return base.Channel.GetImageAddressList(Module);
        }
        
        public System.Data.DataSet GetPDFAddressList(string Module) {
            return base.Channel.GetPDFAddressList(Module);
        }
        
        public System.Data.DataSet GetAddressByTypeList(string Module, int Type) {
            return base.Channel.GetAddressByTypeList(Module, Type);
        }
        
        public System.Data.DataSet GetAll(string Module, string HealthId) {
            return base.Channel.GetAll(Module, HealthId);
        }
        
        public int DeleteHealthEducationInfo(string Module, string Health) {
            return base.Channel.DeleteHealthEducationInfo(Module, Health);
        }
        
        public bool SetMstDevice(string Device, string Address, string Port, string VersionNo, string Description, string Redundance) {
            return base.Channel.SetMstDevice(Device, Address, Port, VersionNo, Description, Redundance);
        }
        
        public string GetIPAndPort(string Device) {
            return base.Channel.GetIPAndPort(Device);
        }
        
        public System.Data.DataSet GetComplianceListByPeriod(string PatientId, string PlanNo, int EndDate) {
            return base.Channel.GetComplianceListByPeriod(PatientId, PlanNo, EndDate);
        }
        
        public System.Data.DataSet GetAllComplianceListByPeriod(string PatientId, string PlanNo, int StartDate, int EndDate) {
            return base.Channel.GetAllComplianceListByPeriod(PatientId, PlanNo, StartDate, EndDate);
        }
        
        public System.Data.DataSet GetTasksByIndate(string PatientId, int Indate, string PlanNo) {
            return base.Channel.GetTasksByIndate(PatientId, Indate, PlanNo);
        }
        
        public CDMIS.ServiceReference.PlanDeatil[] GetPlanList34ByM(string PatientId, string Module) {
            return base.Channel.GetPlanList34ByM(PatientId, Module);
        }
        
        public System.Data.DataSet GetPsTask(string PlanNo) {
            return base.Channel.GetPsTask(PlanNo);
        }
        
        public CDMIS.ServiceReference.PlanDeatil GetPlanInfo(string PlanNo) {
            return base.Channel.GetPlanInfo(PlanNo);
        }
        
        public int PlanStart(string PlanNo, int Status, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.PlanStart(PlanNo, Status, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public int SetCompliance(string PatientId, int DDate, string PlanNo, double Compliance, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetCompliance(PatientId, DDate, PlanNo, Compliance, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int SetComplianceDetail(string Parent, string Id, int Status, string CoUserId, string CoTerminalName, string CoTerminalIP, int CoDeviceType) {
            return base.Channel.SetComplianceDetail(Parent, Id, Status, CoUserId, CoTerminalName, CoTerminalIP, CoDeviceType);
        }
        
        public System.Data.DataSet GetInactiveUserByRole(string RoleClass) {
            return base.Channel.GetInactiveUserByRole(RoleClass);
        }
        
        public int SetActivationCode(string UserId, string RoleClass, string SetActivationCode1) {
            return base.Channel.SetActivationCode(UserId, RoleClass, SetActivationCode1);
        }
        
        public System.Data.DataSet GetActiveUserByRole(string RoleClass) {
            return base.Channel.GetActiveUserByRole(RoleClass);
        }
        
        public string GetExecutingPlanByModule(string PatientId, string Module) {
            return base.Channel.GetExecutingPlanByModule(PatientId, Module);
        }
        
        public int UpdatePlanStatus(string PlanNo, int Status, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.UpdatePlanStatus(PlanNo, Status, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public System.Data.DataSet GetBloodPressureList() {
            return base.Channel.GetBloodPressureList();
        }
        
        public int SetBloodPressure(string Code, string Name, string Description, int SBP, int DBP, string PatientClass, string Redundance) {
            return base.Channel.SetBloodPressure(Code, Name, Description, SBP, DBP, PatientClass, Redundance);
        }
        
        public int DeleteBloodPressure(string Code) {
            return base.Channel.DeleteBloodPressure(Code);
        }
        
        public System.Data.DataSet GetHealthEducationList() {
            return base.Channel.GetHealthEducationList();
        }
        
        public System.Data.DataSet GetLifeStyleList() {
            return base.Channel.GetLifeStyleList();
        }
        
        public int DeleteLifeStyle(string StyleId) {
            return base.Channel.DeleteLifeStyle(StyleId);
        }
        
        public System.Data.DataSet GetLifeStyleDetailList() {
            return base.Channel.GetLifeStyleDetailList();
        }
        
        public int DeleteLifeStyleDetail(string StyleId, string Module) {
            return base.Channel.DeleteLifeStyleDetail(StyleId, Module);
        }
        
        public int SetMstTask(string CategoryCode, string Code, string Name, string ParentCode, string Description, int StartDate, int EndDate, int GroupHeaderFlag, int ControlType, string OptionCategory, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetMstTask(CategoryCode, Code, Name, ParentCode, Description, StartDate, EndDate, GroupHeaderFlag, ControlType, OptionCategory, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int DeleteMstTask(string CategoryCode, string Code) {
            return base.Channel.DeleteMstTask(CategoryCode, Code);
        }
        
        public System.Data.DataSet GetMstTaskByParentCode(string ParentCode) {
            return base.Channel.GetMstTaskByParentCode(ParentCode);
        }
        
        public System.Data.DataSet GetTasks() {
            return base.Channel.GetTasks();
        }
        
        public CDMIS.ServiceReference.TaskDetailInfo GetCmTaskItemInfo(string CategoryCode, string Code) {
            return base.Channel.GetCmTaskItemInfo(CategoryCode, Code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CDMIS.ServiceReference.UpLoadImageResponse CDMIS.ServiceReference.ServicesSoap.UpLoadImage(CDMIS.ServiceReference.UpLoadImageRequest request) {
            return base.Channel.UpLoadImage(request);
        }
        
        public string UpLoadImage(byte[] fs, string fileName, string requestPath) {
            CDMIS.ServiceReference.UpLoadImageRequest inValue = new CDMIS.ServiceReference.UpLoadImageRequest();
            inValue.fs = fs;
            inValue.fileName = fileName;
            inValue.requestPath = requestPath;
            CDMIS.ServiceReference.UpLoadImageResponse retVal = ((CDMIS.ServiceReference.ServicesSoap)(this)).UpLoadImage(inValue);
            return retVal.UpLoadImageResult;
        }
        
        public void GetImplementationForPadFirst(string PatientId, string Module) {
            base.Channel.GetImplementationForPadFirst(PatientId, Module);
        }
        
        public void GetImplementationForPadSecond(string PatientId, string PlanNo) {
            base.Channel.GetImplementationForPadSecond(PatientId, PlanNo);
        }
        
        public void GetSignInfoByCode(string PatientId, string PlanNo, string ItemCode, int StartDate, int EndDate) {
            base.Channel.GetSignInfoByCode(PatientId, PlanNo, ItemCode, StartDate, EndDate);
        }
        
        public void GetImplementationByDate(string PatientId, string PlanNo, string DateSelected) {
            base.Channel.GetImplementationByDate(PatientId, PlanNo, DateSelected);
        }
        
        public void GetImplementationForPhone(string PatientId, string Module) {
            base.Channel.GetImplementationForPhone(PatientId, Module);
        }
        
        public void GetSignsDetailByPeriod(string PatientId, string Module, int StartDate, int Num) {
            base.Channel.GetSignsDetailByPeriod(PatientId, Module, StartDate, Num);
        }
        
        public CDMIS.ServiceReference.ImplementationInfo GetImplementationForWebFirst(string PatientId, string Module) {
            return base.Channel.GetImplementationForWebFirst(PatientId, Module);
        }
        
        public CDMIS.ServiceReference.ImplementationInfo GetImplementationForWebSecond(string PatientId, string PlanNo) {
            return base.Channel.GetImplementationForWebSecond(PatientId, PlanNo);
        }
        
        public CDMIS.ServiceReference.ChartData GetSignInfoByCodeWeb(string PatientId, string PlanNo, string ItemCode, int StartDate, int EndDate) {
            return base.Channel.GetSignInfoByCodeWeb(PatientId, PlanNo, ItemCode, StartDate, EndDate);
        }
        
        public string getRemoteIPAddress() {
            return base.Channel.getRemoteIPAddress();
        }
        
        public System.Data.DataSet GetTmpDrugByStatus(int Status) {
            return base.Channel.GetTmpDrugByStatus(Status);
        }
        
        public System.Data.DataSet GetMpDrugCmp() {
            return base.Channel.GetMpDrugCmp();
        }
        
        public string GetDrugName(string DrugCode, string DrugSpec) {
            return base.Channel.GetDrugName(DrugCode, DrugSpec);
        }
        
        public bool SetMpDrugCmp(string HospitalCode, string HZCode, string HzSpec, string DrugCode, string DrugSpec, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetMpDrugCmp(HospitalCode, HZCode, HzSpec, DrugCode, DrugSpec, Redundance, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool ChangeStatusForTmpDrug(string HospitalCode, string DrugCode, string DrugSpec, int Status) {
            return base.Channel.ChangeStatusForTmpDrug(HospitalCode, DrugCode, DrugSpec, Status);
        }
        
        public System.Data.DataSet GetTmpLabItemByStatus(int Status) {
            return base.Channel.GetTmpLabItemByStatus(Status);
        }
        
        public bool SetMpLabItemCmp(string HospitalCode, string HZCode, string Type, string Code, string Redundance, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetMpLabItemCmp(HospitalCode, HZCode, Type, Code, Redundance, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool ChangeStatusForTmpLabItem(string HospitalCode, string Code, int Status) {
            return base.Channel.ChangeStatusForTmpLabItem(HospitalCode, Code, Status);
        }
        
        public System.Data.DataSet GetMpLabItemsCmp() {
            return base.Channel.GetMpLabItemsCmp();
        }
        
        public bool SetLabTestItem(string Type, string Code, string TypeName, string Name, int SortNo, string InputCode, string Description, int InvalidFlag) {
            return base.Channel.SetLabTestItem(Type, Code, TypeName, Name, SortNo, InputCode, Description, InvalidFlag);
        }
        
        public string GetLabItemTypeNameByType(string Type) {
            return base.Channel.GetLabItemTypeNameByType(Type);
        }
        
        public string GetLabItemName(string Type, string Code) {
            return base.Channel.GetLabItemName(Type, Code);
        }
        
        public bool SetDocName(string UserId, string UserName) {
            return base.Channel.SetDocName(UserId, UserName);
        }
        
        public string GetModuleByDoctorId(string UserId) {
            return base.Channel.GetModuleByDoctorId(UserId);
        }
        
        public System.Data.DataSet GetRoleList() {
            return base.Channel.GetRoleList();
        }
        
        public System.Data.DataSet GetAuthorityList() {
            return base.Channel.GetAuthorityList();
        }
        
        public System.Data.DataSet GetRoleAuthorityList(string roleCode) {
            return base.Channel.GetRoleAuthorityList(roleCode);
        }
        
        public System.Data.DataSet GetSubAuthorityList(string AuthorityCode) {
            return base.Channel.GetSubAuthorityList(AuthorityCode);
        }
        
        public bool SetRole2Authority(string piRoleCode, string piAuthorityCode, string piSubAuthorityCode, string piRedundance, int piInvalidFlag, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetRole2Authority(piRoleCode, piAuthorityCode, piSubAuthorityCode, piRedundance, piInvalidFlag, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetDoctorInfoList(string docId, string docName) {
            return base.Channel.GetDoctorInfoList(docId, docName);
        }
        
        public System.Data.DataSet GetDoctorModuleList(string DoctorId) {
            return base.Channel.GetDoctorModuleList(DoctorId);
        }
        
        public System.Data.DataSet GetModuleList() {
            return base.Channel.GetModuleList();
        }
        
        public bool SetPsDoctor(string UserId, string UserName, int Birthday, int Gender, string IDNo, int InvalidFlag, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetPsDoctor(UserId, UserName, Birthday, Gender, IDNo, InvalidFlag, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetPsDoctorDetail(string Doctor, string CategoryCode, string Value, string Description, int SortNo, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetPsDoctorDetail(Doctor, CategoryCode, Value, Description, SortNo, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public System.Data.DataSet GetPatListByDoctorId(string DoctorId) {
            return base.Channel.GetPatListByDoctorId(DoctorId);
        }
        
        public System.Data.DataSet GetDoctorListByModule(string CategoryCode) {
            return base.Channel.GetDoctorListByModule(CategoryCode);
        }
        
        public int DeletePatient(string DoctorId, string CategoryCode, string Value) {
            return base.Channel.DeletePatient(DoctorId, CategoryCode, Value);
        }
        
        public System.Data.DataSet GetVitalSignsTypeNameList() {
            return base.Channel.GetVitalSignsTypeNameList();
        }
        
        public System.Data.DataSet GetVitalSignsNameListByType(string Type) {
            return base.Channel.GetVitalSignsNameListByType(Type);
        }
        
        public System.Data.DataSet GetDoctorList() {
            return base.Channel.GetDoctorList();
        }
        
        public bool SetPatBasicInfo(string UserId, string UserName, int Birthday, int Gender, int BloodType, string IDNo, string DoctorId, string InsuranceType, int InvalidFlag, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetPatBasicInfo(UserId, UserName, Birthday, Gender, BloodType, IDNo, DoctorId, InsuranceType, InvalidFlag, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool UpdatePatBasicInfoDtl(string Patient, string CategoryCode, string ItemCode, int ItemSeq, string Value, string Description, int SortNo, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.UpdatePatBasicInfoDtl(Patient, CategoryCode, ItemCode, ItemSeq, Value, Description, SortNo, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetPatBasicInfoDtl(string Patient, string CategoryCode, string ItemCode, string Value, string Description, int SortNo, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetPatBasicInfoDtl(Patient, CategoryCode, ItemCode, Value, Description, SortNo, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int DeleteModule(string UserId, string CategoryCode, string ItemCode, int ItemSeq) {
            return base.Channel.DeleteModule(UserId, CategoryCode, ItemCode, ItemSeq);
        }
        
        public int DeleteVitalSignsInfo(string UserId, string VitalSignsType, string VitalSignsCode, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.DeleteVitalSignsInfo(UserId, VitalSignsType, VitalSignsCode, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetPatToVSInfo(string UserId, string VitalSignsType, string VitalSignsCode, int InvalidFlag, int SortNo, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetPatToVSInfo(UserId, VitalSignsType, VitalSignsCode, InvalidFlag, SortNo, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public System.Data.DataSet GetVitalSignsNameList() {
            return base.Channel.GetVitalSignsNameList();
        }
        
        public System.Data.DataSet GetMstInfoItemByCategoryCode(string CategoryCode) {
            return base.Channel.GetMstInfoItemByCategoryCode(CategoryCode);
        }
        
        public string GetNoByNumberingType(int NumberingType) {
            return base.Channel.GetNoByNumberingType(NumberingType);
        }
        
        public System.Data.DataSet GetModulesBoughtByPId(string PatientId) {
            return base.Channel.GetModulesBoughtByPId(PatientId);
        }
        
        public System.Data.DataSet GetModulesUnBoughtByPId(string PatientId) {
            return base.Channel.GetModulesUnBoughtByPId(PatientId);
        }
        
        public System.Data.DataSet GetItemInfoByPIdAndModule(string PatientId, string CategoryCode) {
            return base.Channel.GetItemInfoByPIdAndModule(PatientId, CategoryCode);
        }
        
        public bool SetHUserId(string UserId, string HUserId, string HospitalCode, string Description, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetHUserId(UserId, HUserId, HospitalCode, Description, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public string getLatestHUserIdByHCode(string UserId, string HospitalCode) {
            return base.Channel.getLatestHUserIdByHCode(UserId, HospitalCode);
        }
        
        public System.Data.DataSet GetDeptList(string TypeCode) {
            return base.Channel.GetDeptList(TypeCode);
        }
        
        public bool SetInPatientInfo(string UserId, string VisitId, int SortNo, System.DateTime AdmissionDate, System.DateTime DischargeDate, string HospitalCode, string Department, string Doctor, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetInPatientInfo(UserId, VisitId, SortNo, AdmissionDate, DischargeDate, HospitalCode, Department, Doctor, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public bool SetOutPatientInfo(string UserId, string VisitId, System.DateTime ClinicDate, string HospitalCode, string Department, string Doctor, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetOutPatientInfo(UserId, VisitId, ClinicDate, HospitalCode, Department, Doctor, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public int DeleteInPatientInfo(string UserId, string VisitId) {
            return base.Channel.DeleteInPatientInfo(UserId, VisitId);
        }
        
        public int DeleteOutPatientInfo(string UserId, string VisitId) {
            return base.Channel.DeleteOutPatientInfo(UserId, VisitId);
        }
        
        public int DeleteSymptomsInfo(string UserId, string VisitId, int SymptomsNo) {
            return base.Channel.DeleteSymptomsInfo(UserId, VisitId, SymptomsNo);
        }
        
        public System.Data.DataSet GetLabTestItemsTypeNameList() {
            return base.Channel.GetLabTestItemsTypeNameList();
        }
        
        public System.Data.DataSet GetDiagnosisInfoList(string UserId, string VisitId) {
            return base.Channel.GetDiagnosisInfoList(UserId, VisitId);
        }
        
        public bool SetDiagnosisInfo(string UserId, string VisitId, int DiagnosisType, string DiagnosisNo, string Type, string DiagnosisCode, string Description, string RecordDate, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetDiagnosisInfo(UserId, VisitId, DiagnosisType, DiagnosisNo, Type, DiagnosisCode, Description, RecordDate, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public int DeleteDiagnosisInfo(string UserId, string VisitId, int DiagnosisType, string DiagnosisNo) {
            return base.Channel.DeleteDiagnosisInfo(UserId, VisitId, DiagnosisType, DiagnosisNo);
        }
        
        public System.Data.DataSet GetDiagNameList(string Type) {
            return base.Channel.GetDiagNameList(Type);
        }
        
        public System.Data.DataSet GetDiabetesDrugNameList(string Type) {
            return base.Channel.GetDiabetesDrugNameList(Type);
        }
        
        public System.Data.DataSet GetHypertensionDrugNameList(string Type) {
            return base.Channel.GetHypertensionDrugNameList(Type);
        }
        
        public System.Data.DataSet GetLipidDrugNameList(string Type) {
            return base.Channel.GetLipidDrugNameList(Type);
        }
        
        public System.Data.DataSet GetAcidDrugNameList(string Type) {
            return base.Channel.GetAcidDrugNameList(Type);
        }
        
        public System.Data.DataSet GetDiagTypeNameList() {
            return base.Channel.GetDiagTypeNameList();
        }
        
        public System.Data.DataSet GetDiabetesDrugTypeNameList() {
            return base.Channel.GetDiabetesDrugTypeNameList();
        }
        
        public System.Data.DataSet GetHypertensionDrugTypeNameList() {
            return base.Channel.GetHypertensionDrugTypeNameList();
        }
        
        public System.Data.DataSet GetLipidDrugTypeNameList() {
            return base.Channel.GetLipidDrugTypeNameList();
        }
        
        public System.Data.DataSet GetUricAcidReductionDrugTypeNameList() {
            return base.Channel.GetUricAcidReductionDrugTypeNameList();
        }
        
        public System.Data.DataSet GetClinicalInfoList(string UserId) {
            return base.Channel.GetClinicalInfoList(UserId);
        }
        
        public bool SetClinicalInfo(string UserId, int VisitId, int VisitType, int AdmissionDate, int DischargeDate, string HospitalCode, string Department, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetClinicalInfo(UserId, VisitId, VisitType, AdmissionDate, DischargeDate, HospitalCode, Department, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public int DeleteClinicalInfo(string UserId, int VisitId) {
            return base.Channel.DeleteClinicalInfo(UserId, VisitId);
        }
        
        public System.Data.DataSet GetHospitalList() {
            return base.Channel.GetHospitalList();
        }
        
        public System.Data.DataSet GetExaminationList(string UserId, string VisitId) {
            return base.Channel.GetExaminationList(UserId, VisitId);
        }
        
        public bool UpdateExamination(
                    string UserId, 
                    string VisitId, 
                    int SortNo, 
                    string ExamType, 
                    string ExamDate, 
                    string ItemCode, 
                    string ExamPara, 
                    string Decription, 
                    string Impression, 
                    string Recommendation, 
                    int IsAbnormal, 
                    string Status, 
                    string ReportDate, 
                    string ImageURL, 
                    string DeptCode, 
                    string revUserId, 
                    string TerminalName, 
                    string TerminalIP, 
                    int DeviceType) {
            return base.Channel.UpdateExamination(UserId, VisitId, SortNo, ExamType, ExamDate, ItemCode, ExamPara, Decription, Impression, Recommendation, IsAbnormal, Status, ReportDate, ImageURL, DeptCode, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetExamination(
                    string UserId, 
                    string VisitId, 
                    string ExamType, 
                    string ExamDate, 
                    string ItemCode, 
                    string ExamPara, 
                    string Decription, 
                    string Impression, 
                    string Recommendation, 
                    int IsAbnormal, 
                    string Status, 
                    string ReportDate, 
                    string ImageURL, 
                    string DeptCode, 
                    string revUserId, 
                    string TerminalName, 
                    string TerminalIP, 
                    int DeviceType) {
            return base.Channel.SetExamination(UserId, VisitId, ExamType, ExamDate, ItemCode, ExamPara, Decription, Impression, Recommendation, IsAbnormal, Status, ReportDate, ImageURL, DeptCode, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int DeleteExamination(string UserId, string VisitId, int SortNo) {
            return base.Channel.DeleteExamination(UserId, VisitId, SortNo);
        }
        
        public System.Data.DataSet GetLabTestList(string UserId, string VisitId) {
            return base.Channel.GetLabTestList(UserId, VisitId);
        }
        
        public bool UpdateLabTest(string UserId, string VisitId, string SortNo, string LabItemType, string LabItemCode, string LabTestDate, string Status, string ReportDate, string DeptCode, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.UpdateLabTest(UserId, VisitId, SortNo, LabItemType, LabItemCode, LabTestDate, Status, ReportDate, DeptCode, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetLabTest(string UserId, string VisitId, string LabItemType, string LabItemCode, string LabTestDate, string Status, string ReportDate, string DeptCode, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetLabTest(UserId, VisitId, LabItemType, LabItemCode, LabTestDate, Status, ReportDate, DeptCode, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int DeleteLabTest(string UserId, string VisitId, string SortNo) {
            return base.Channel.DeleteLabTest(UserId, VisitId, SortNo);
        }
        
        public System.Data.DataSet GetDrugNameList() {
            return base.Channel.GetDrugNameList();
        }
        
        public System.Data.DataSet GetDrugRecordList(string UserId, string VisitId) {
            return base.Channel.GetDrugRecordList(UserId, VisitId);
        }
        
        public bool UpdateDrugRecord(
                    string UserId, 
                    string VisitId, 
                    int OrderNo, 
                    int OrderSubNo, 
                    int RepeatIndicator, 
                    string OrderClass, 
                    string OrderCode, 
                    string OrderContent, 
                    decimal Dosage, 
                    string DosageUnits, 
                    string Administration, 
                    System.DateTime StartDateTime, 
                    System.DateTime StopDateTime, 
                    int Duration, 
                    string DurationUnits, 
                    string Frequency, 
                    int FreqCounter, 
                    int FreqInteval, 
                    string FreqIntevalUnit, 
                    string DeptCode, 
                    string revUserId, 
                    string TerminalName, 
                    string TerminalIP, 
                    int DeviceType) {
            return base.Channel.UpdateDrugRecord(UserId, VisitId, OrderNo, OrderSubNo, RepeatIndicator, OrderClass, OrderCode, OrderContent, Dosage, DosageUnits, Administration, StartDateTime, StopDateTime, Duration, DurationUnits, Frequency, FreqCounter, FreqInteval, FreqIntevalUnit, DeptCode, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetDrugRecord(
                    string UserId, 
                    string VisitId, 
                    int OrderSubNo, 
                    int RepeatIndicator, 
                    string OrderClass, 
                    string OrderCode, 
                    string OrderContent, 
                    decimal Dosage, 
                    string DosageUnits, 
                    string Administration, 
                    System.DateTime StartDateTime, 
                    System.DateTime StopDateTime, 
                    int Duration, 
                    string DurationUnits, 
                    string Frequency, 
                    int FreqCounter, 
                    int FreqInteval, 
                    string FreqIntevalUnit, 
                    string DeptCode, 
                    string revUserId, 
                    string TerminalName, 
                    string TerminalIP, 
                    int DeviceType) {
            return base.Channel.SetDrugRecord(UserId, VisitId, OrderSubNo, RepeatIndicator, OrderClass, OrderCode, OrderContent, Dosage, DosageUnits, Administration, StartDateTime, StopDateTime, Duration, DurationUnits, Frequency, FreqCounter, FreqInteval, FreqIntevalUnit, DeptCode, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int DeleteDrugRecord(string UserId, string VisitId, int OrderNo, int OrderSubNo) {
            return base.Channel.DeleteDrugRecord(UserId, VisitId, OrderNo, OrderSubNo);
        }
        
        public System.Data.DataSet GetExamItemNameList(string Type) {
            return base.Channel.GetExamItemNameList(Type);
        }
        
        public System.Data.DataSet GetLabTestItemsNameList(string Type) {
            return base.Channel.GetLabTestItemsNameList(Type);
        }
        
        public System.Data.DataSet GetExamItemTypeNameList() {
            return base.Channel.GetExamItemTypeNameList();
        }
        
        public System.Data.DataSet GetExamDtlList(string UserId, string VisitId, string SortNo, string ItemCode) {
            return base.Channel.GetExamDtlList(UserId, VisitId, SortNo, ItemCode);
        }
        
        public bool SetExamDtl(string UserId, string VisitId, int SortNo, string Code, string Value, int IsAbnormal, string Unit, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetExamDtl(UserId, VisitId, SortNo, Code, Value, IsAbnormal, Unit, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int DeleteExamDtl(string UserId, string VisitId, int SortNo, string Code) {
            return base.Channel.DeleteExamDtl(UserId, VisitId, SortNo, Code);
        }
        
        public System.Data.DataSet GetExamSubItemNameList(string Code) {
            return base.Channel.GetExamSubItemNameList(Code);
        }
        
        public System.Data.DataSet GetLabTestDtlList(string UserId, string VisitId, string SortNo) {
            return base.Channel.GetLabTestDtlList(UserId, VisitId, SortNo);
        }
        
        public bool SetLabTestDtl(string UserId, string VisitId, string SortNo, string Code, string Value, int IsAbnormal, string Unit, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetLabTestDtl(UserId, VisitId, SortNo, Code, Value, IsAbnormal, Unit, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int DeteleLabTestDtl(string UserId, string VisitId, string SortNo, string Code) {
            return base.Channel.DeteleLabTestDtl(UserId, VisitId, SortNo, Code);
        }
        
        public System.Data.DataSet GetLabTestSubItemNameList() {
            return base.Channel.GetLabTestSubItemNameList();
        }
        
        public bool SetPsDoctorDetailOnPat(string Doctor, string CategoryCode, string Value, string Description, int SortNo, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetPsDoctorDetailOnPat(Doctor, CategoryCode, Value, Description, SortNo, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public CDMIS.ServiceReference.PatientBasicInfo GetPatBasicInfo(string UserId) {
            return base.Channel.GetPatBasicInfo(UserId);
        }
        
        public int GetUntreatedAlertAmount(string UserId) {
            return base.Channel.GetUntreatedAlertAmount(UserId);
        }
        
        public int GetCareLevel(string UserId, string ModuleType) {
            return base.Channel.GetCareLevel(UserId, ModuleType);
        }
        
        public System.Data.DataSet GetSymptomsListByPId(string UserId) {
            return base.Channel.GetSymptomsListByPId(UserId);
        }
        
        public System.Data.DataSet GetSymptomsTypeList() {
            return base.Channel.GetSymptomsTypeList();
        }
        
        public System.Data.DataSet GetSymptomsNameList(string Type) {
            return base.Channel.GetSymptomsNameList(Type);
        }
        
        public bool SetSymptomsInfo(string UserId, string VisitId, string SymptomsType, string SymptomsCode, string Description, int RecordDate, int RecordTime, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetSymptomsInfo(UserId, VisitId, SymptomsType, SymptomsCode, Description, RecordDate, RecordTime, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public bool UpdateSymptomsInfo(string UserId, string VisitId, int SynptomsNo, string SymptomsType, string SymptomsCode, string Description, int RecordDate, int RecordTime, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.UpdateSymptomsInfo(UserId, VisitId, SynptomsNo, SymptomsType, SymptomsCode, Description, RecordDate, RecordTime, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public System.Data.DataSet GetSymptomsList(string UserId, string VisitId) {
            return base.Channel.GetSymptomsList(UserId, VisitId);
        }
        
        public System.Data.DataSet GetDurationNameList() {
            return base.Channel.GetDurationNameList();
        }
        
        public int DeleteTreatmentInfo(string UserId, int SortNo) {
            return base.Channel.DeleteTreatmentInfo(UserId, SortNo);
        }
        
        public System.Data.DataSet GetTreatmentGoalsList() {
            return base.Channel.GetTreatmentGoalsList();
        }
        
        public System.Data.DataSet GetTreatmentActionList() {
            return base.Channel.GetTreatmentActionList();
        }
        
        public System.Data.DataSet GetGroupList() {
            return base.Channel.GetGroupList();
        }
        
        public bool SetTreatmentInfo(string UserId, int TreatmentGoal, int TreatmentAction, int Group, string TreatmentPlan, string Description, System.DateTime TreatTime, string Duration, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetTreatmentInfo(UserId, TreatmentGoal, TreatmentAction, Group, TreatmentPlan, Description, TreatTime, Duration, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool UpdateTreatmentInfo(string UserId, int SortNo, int TreatmentGoal, int TreatmentAction, int Group, string TreatmentPlan, string Description, System.DateTime TreatTime, string Duration, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.UpdateTreatmentInfo(UserId, SortNo, TreatmentGoal, TreatmentAction, Group, TreatmentPlan, Description, TreatTime, Duration, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetTreatmentList(string UserId) {
            return base.Channel.GetTreatmentList(UserId);
        }
        
        public bool SetTrnProcessFlag(string UserId, int SortNo, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType) {
            return base.Channel.SetTrnProcessFlag(UserId, SortNo, revUserId, pTerminalName, pTerminalIP, pDeviceType);
        }
        
        public bool SetTrnAlertRecord(string UserId, string AlertItemCode, System.DateTime AlertDateTime, int AlertType, int PushFlag, int ProcessFlag, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType) {
            return base.Channel.SetTrnAlertRecord(UserId, AlertItemCode, AlertDateTime, AlertType, PushFlag, ProcessFlag, revUserId, pTerminalName, pTerminalIP, pDeviceType);
        }
        
        public System.Data.DataSet GetTrnAlertRecordList(string UserId) {
            return base.Channel.GetTrnAlertRecordList(UserId);
        }
        
        public bool SendAlertMessage(string MessageNo, int MessageType, string SendBy, string Title, string Reciever, string Content, int SetCondition, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType) {
            return base.Channel.SendAlertMessage(MessageNo, MessageType, SendBy, Title, Reciever, Content, SetCondition, revUserId, pTerminalName, pTerminalIP, pDeviceType);
        }
        
        public bool SetPushFlag(string UserId, int SortNo, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType) {
            return base.Channel.SetPushFlag(UserId, SortNo, revUserId, pTerminalName, pTerminalIP, pDeviceType);
        }
        
        public int GetUnreadCount(string UserId) {
            return base.Channel.GetUnreadCount(UserId);
        }
        
        public int GetDraftCount(string UserId) {
            return base.Channel.GetDraftCount(UserId);
        }
        
        public string GetUserName(string UserId) {
            return base.Channel.GetUserName(UserId);
        }
        
        public System.Data.DataSet GetConForDoctor(string UserId, string CategoryCode) {
            return base.Channel.GetConForDoctor(UserId, CategoryCode);
        }
        
        public System.Data.DataSet GetConForPatient(string UserId, string CategoryCode) {
            return base.Channel.GetConForPatient(UserId, CategoryCode);
        }
        
        public string GetClass(string UserId) {
            return base.Channel.GetClass(UserId);
        }
        
        public System.Data.DataSet GetConForAdmin() {
            return base.Channel.GetConForAdmin();
        }
        
        public System.Data.DataSet GetDraftList(string UserId) {
            return base.Channel.GetDraftList(UserId);
        }
        
        public bool SetMessage(string MessageNo, int MessageType, string SendBy, string Title, string Reciever, string Content, int SetCondition, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType) {
            return base.Channel.SetMessage(MessageNo, MessageType, SendBy, Title, Reciever, Content, SetCondition, revUserId, pTerminalName, pTerminalIP, pDeviceType);
        }
        
        public CDMIS.ServiceReference.Message GetMessageDetail(string MessageNo) {
            return base.Channel.GetMessageDetail(MessageNo);
        }
        
        public bool DeleteDraft(string MessageNo) {
            return base.Channel.DeleteDraft(MessageNo);
        }
        
        public System.Data.DataSet GetReceiveList(string UserId) {
            return base.Channel.GetReceiveList(UserId);
        }
        
        public bool ChangeReadStatus(string MessageNo, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType) {
            return base.Channel.ChangeReadStatus(MessageNo, revUserId, pTerminalName, pTerminalIP, pDeviceType);
        }
        
        public System.Data.DataSet GetHaveSentList(string UserId) {
            return base.Channel.GetHaveSentList(UserId);
        }
        
        public bool SetSMS(string SendBy, string Reciever, string Content, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetSMS(SendBy, Reciever, Content, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public int GetSMSCountForAll(string DoctorId) {
            return base.Channel.GetSMSCountForAll(DoctorId);
        }
        
        public int GetSMSCountForOne(string Reciever, string SendBy) {
            return base.Channel.GetSMSCountForOne(Reciever, SendBy);
        }
        
        public System.Data.DataSet GetSMSList(string DoctorId, string CategoryCode) {
            return base.Channel.GetSMSList(DoctorId, CategoryCode);
        }
        
        public System.Data.DataSet GetSMSDialogue(string Reciever, string SendBy) {
            return base.Channel.GetSMSDialogue(Reciever, SendBy);
        }
        
        public bool SetSMSRead(string Reciever, string SendBy, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetSMSRead(Reciever, SendBy, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public CDMIS.ServiceReference.Message GetLatestSMS(string DoctorId, string PatientId) {
            return base.Channel.GetLatestSMS(DoctorId, PatientId);
        }
        
        public bool ChangePushStatus(string MessageNo, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.ChangePushStatus(MessageNo, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public string GetSMSFlag(string MessageNo) {
            return base.Channel.GetSMSFlag(MessageNo);
        }
        
        public string GetToken(string UserId, string UserName, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.GetToken(UserId, UserName, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public string getLocalmachineIPAddress() {
            return base.Channel.getLocalmachineIPAddress();
        }
        
        public bool TestGetCacheConnection() {
            return base.Channel.TestGetCacheConnection();
        }
        
        public System.Data.DataSet GetTypeList(string Category) {
            return base.Channel.GetTypeList(Category);
        }
        
        public string GetMstTypeName(string Category, int Type) {
            return base.Channel.GetMstTypeName(Category, Type);
        }
        
        public int DeleteUser(string UserId, int Date) {
            return base.Channel.DeleteUser(UserId, Date);
        }
        
        public string GetServerTime() {
            return base.Channel.GetServerTime();
        }
        
        public System.Data.DataSet GetServerLog() {
            return base.Channel.GetServerLog();
        }
        
        public System.Data.DataSet GetPatientsByDoctorId(string DoctorId, string VisitId) {
            return base.Channel.GetPatientsByDoctorId(DoctorId, VisitId);
        }
        
        public bool ChangCareLevel(string moduleType, string PatientId, string DoctorId, int carelevel, string revUserId, string pTerminalIP, string pTerminalName, int pDeviceType) {
            return base.Channel.ChangCareLevel(moduleType, PatientId, DoctorId, carelevel, revUserId, pTerminalIP, pTerminalName, pDeviceType);
        }
        
        public System.Data.DataSet GetAlertsByDoctorId(string DoctorId) {
            return base.Channel.GetAlertsByDoctorId(DoctorId);
        }
        
        public bool SetProcessFlag(string UserId, int SortNo, string revUserId, string pTerminalName, string pTerminalIP, int pDeviceType) {
            return base.Channel.SetProcessFlag(UserId, SortNo, revUserId, pTerminalName, pTerminalIP, pDeviceType);
        }
        
        public int CheckPassword(string UserId, string Password) {
            return base.Channel.CheckPassword(UserId, Password);
        }
        
        public int UpdateLastLoginDateTime(string UserId, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.UpdateLastLoginDateTime(UserId, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int CheckPasswordByInput(string Type, string Name, string Password) {
            return base.Channel.CheckPasswordByInput(Type, Name, Password);
        }
        
        public int Register(string Type, string Name, string Value, string Password, string UserName, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.Register(Type, Name, Value, Password, UserName, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int Activition(string UserId, string InviteCode, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.Activition(UserId, InviteCode, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int CheckRepeat(string Input, string Type) {
            return base.Channel.CheckRepeat(Input, Type);
        }
        
        public System.Data.DataSet GetAllRoleMatch(string UserId) {
            return base.Channel.GetAllRoleMatch(UserId);
        }
        
        public int SetPsRoleMatch(string PatientId, string RoleClass, string ActivationCode, string ActivatedState, string Description) {
            return base.Channel.SetPsRoleMatch(PatientId, RoleClass, ActivationCode, ActivatedState, Description);
        }
        
        public int SetCmMstUserDetail(string UserId, int StartDate, string Type, string Name, string Value, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetCmMstUserDetail(UserId, StartDate, Type, Name, Value, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public string GetIDByInput(string Type, string Name) {
            return base.Channel.GetIDByInput(Type, Name);
        }
        
        public int SetActivition(string UserID, string RoleClass, string ActivationCode) {
            return base.Channel.SetActivition(UserID, RoleClass, ActivationCode);
        }
        
        public string GetActivatedState(string UserID, string RoleClass) {
            return base.Channel.GetActivatedState(UserID, RoleClass);
        }
        
        public int SetPhoneNo(string UserId, string Type, string Name, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetPhoneNo(UserId, Type, Name, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public string GetActivateCode(string UserID, string RoleClass) {
            return base.Channel.GetActivateCode(UserID, RoleClass);
        }
        
        public int CheckPatientPhoneNumber(string UserId, string piPhoneNumber) {
            return base.Channel.CheckPatientPhoneNumber(UserId, piPhoneNumber);
        }
        
        public int CheckDoctorPhoneNumber(string UserId, string piPhoneNumber) {
            return base.Channel.CheckDoctorPhoneNumber(UserId, piPhoneNumber);
        }
        
        public int ChangePassword(string UserId, string OldPassword, string newPassword, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.ChangePassword(UserId, OldPassword, newPassword, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int ResetPassword(string UserId, string OldPassword, string newPassword, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.ResetPassword(UserId, OldPassword, newPassword, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int CheckPhoneNumber(string Type, string piName, string UserId) {
            return base.Channel.CheckPhoneNumber(Type, piName, UserId);
        }
        
        public CDMIS.ServiceReference.PatientBasicInfo0 GetBasicInfo(string UserId) {
            return base.Channel.GetBasicInfo(UserId);
        }
        
        public CDMIS.ServiceReference.PatientDetailInfo0 GetDetailInfo(string UserId) {
            return base.Channel.GetDetailInfo(UserId);
        }
        
        public CDMIS.ServiceReference.PatientALLBasicInfo GetUserBasicInfo(string UserId) {
            return base.Channel.GetUserBasicInfo(UserId);
        }
        
        public System.Data.DataSet GetPatientBasicInfoDetail(string UserId, string CategoryCode) {
            return base.Channel.GetPatientBasicInfoDetail(UserId, CategoryCode);
        }
        
        public bool SetBasicInfo(string UserId, string UserName, int Birthday, int Gender, int BloodType, string IDNo, string DoctorId, string InsuranceType, int InvalidFlag, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetBasicInfo(UserId, UserName, Birthday, Gender, BloodType, IDNo, DoctorId, InsuranceType, InvalidFlag, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool SetBasicInfoDetail(string Patient, string CategoryCode, string ItemCode, int ItemSeq, string Value, string Description, int SortNo, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetBasicInfoDetail(Patient, CategoryCode, ItemCode, ItemSeq, Value, Description, SortNo, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetDoctorInfo(string UserId) {
            return base.Channel.GetDoctorInfo(UserId);
        }
        
        public CDMIS.ServiceReference.DoctorDetailInfo0 GetDoctorInfoDetail(string Doctor) {
            return base.Channel.GetDoctorInfoDetail(Doctor);
        }
        
        public bool SetDoctorInfoDetail(string Doctor, string CategoryCode, string ItemCode, int ItemSeq, string Value, string Description, int SortNo, string piUserId, string piTerminalName, string piTerminalIP, int piDeviceType) {
            return base.Channel.SetDoctorInfoDetail(Doctor, CategoryCode, ItemCode, ItemSeq, Value, Description, SortNo, piUserId, piTerminalName, piTerminalIP, piDeviceType);
        }
        
        public int GetHospitalMaxCode(string Code) {
            return base.Channel.GetHospitalMaxCode(Code);
        }
        
        public int GetDivisionMaxCode() {
            return base.Channel.GetDivisionMaxCode();
        }
        
        public bool SetType(string Category, int Type, string Name, int InvalidFlag, int SortNo, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetType(Category, Type, Name, InvalidFlag, SortNo, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetType() {
            return base.Channel.GetType();
        }
        
        public int DeleteType(string Category, int Type) {
            return base.Channel.DeleteType(Category, Type);
        }
        
        public bool SetRole(string Code, string Name, int SortNo, string Redundance, int InvalidFlag) {
            return base.Channel.SetRole(Code, Name, SortNo, Redundance, InvalidFlag);
        }
        
        public System.Data.DataSet GetRole() {
            return base.Channel.GetRole();
        }
        
        public int DeleteRole(string Code) {
            return base.Channel.DeleteRole(Code);
        }
        
        public bool SetAuthority(string piCode, string piName, int piSortNo, string piRedundance, int piInvalidFlag) {
            return base.Channel.SetAuthority(piCode, piName, piSortNo, piRedundance, piInvalidFlag);
        }
        
        public System.Data.DataSet GetAuthority() {
            return base.Channel.GetAuthority();
        }
        
        public int DeleteAuthority(string Code) {
            return base.Channel.DeleteAuthority(Code);
        }
        
        public bool SetAuthorityDetail(string Authority, string piCode, string piName, int piSortNo, string piRedundance, int piInvalidFlag) {
            return base.Channel.SetAuthorityDetail(Authority, piCode, piName, piSortNo, piRedundance, piInvalidFlag);
        }
        
        public System.Data.DataSet GetAuthorityDetail() {
            return base.Channel.GetAuthorityDetail();
        }
        
        public System.Data.DataSet GetSubAuthority(string Authority) {
            return base.Channel.GetSubAuthority(Authority);
        }
        
        public int DeleteAuthorityDetail(string Authority, string Code) {
            return base.Channel.DeleteAuthorityDetail(Authority, Code);
        }
        
        public int DeleteDivision(int Type, string Code) {
            return base.Channel.DeleteDivision(Type, Code);
        }
        
        public bool SetHospital(string Code, int Type, string Name, int SortNo, int StartDate, int EndDate, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetHospital(Code, Type, Name, SortNo, StartDate, EndDate, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetHospital() {
            return base.Channel.GetHospital();
        }
        
        public int DeleteHospital(string Code) {
            return base.Channel.DeleteHospital(Code);
        }
        
        public bool SetSymptoms(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag) {
            return base.Channel.SetSymptoms(Type, Code, TypeName, Name, InputCode, SortNo, Redundance, InvalidFlag);
        }
        
        public System.Data.DataSet GetSymptoms() {
            return base.Channel.GetSymptoms();
        }
        
        public int DeleteSymptoms(string Type, string Code) {
            return base.Channel.DeleteSymptoms(Type, Code);
        }
        
        public int DeleteDiagnosis(string Type, string Code) {
            return base.Channel.DeleteDiagnosis(Type, Code);
        }
        
        public bool SetVitalSigns(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag) {
            return base.Channel.SetVitalSigns(Type, Code, TypeName, Name, InputCode, SortNo, Redundance, InvalidFlag);
        }
        
        public System.Data.DataSet GetVitalSigns() {
            return base.Channel.GetVitalSigns();
        }
        
        public int DeleteVitalSigns(string Type, string Code) {
            return base.Channel.DeleteVitalSigns(Type, Code);
        }
        
        public bool SetExaminationItem(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag) {
            return base.Channel.SetExaminationItem(Type, Code, TypeName, Name, InputCode, SortNo, Redundance, InvalidFlag);
        }
        
        public System.Data.DataSet GetExaminationItem() {
            return base.Channel.GetExaminationItem();
        }
        
        public int DeleteExaminationItem(string Type, string Code) {
            return base.Channel.DeleteExaminationItem(Type, Code);
        }
        
        public bool SetExaminationSubItem(string Code, string Name, int SortNo, string InputCode, string Redundance, int InvalidFlag) {
            return base.Channel.SetExaminationSubItem(Code, Name, SortNo, InputCode, Redundance, InvalidFlag);
        }
        
        public System.Data.DataSet GetExaminationSubItem() {
            return base.Channel.GetExaminationSubItem();
        }
        
        public int DeleteExaminationSubItem(string Code, string SubCode) {
            return base.Channel.DeleteExaminationSubItem(Code, SubCode);
        }
        
        public bool SetLabTestItems(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag) {
            return base.Channel.SetLabTestItems(Type, Code, TypeName, Name, InputCode, SortNo, Redundance, InvalidFlag);
        }
        
        public System.Data.DataSet GetLabTestItems() {
            return base.Channel.GetLabTestItems();
        }
        
        public int DeleteLabTestItems(string Type, string Code) {
            return base.Channel.DeleteLabTestItems(Type, Code);
        }
        
        public bool SetLabTestSubItems(string Code, string Name, int SortNo, string InputCode, string Redundance, int InvalidFlag) {
            return base.Channel.SetLabTestSubItems(Code, Name, SortNo, InputCode, Redundance, InvalidFlag);
        }
        
        public System.Data.DataSet GetLabTestSubItems() {
            return base.Channel.GetLabTestSubItems();
        }
        
        public int DeleteLabTestSubItems(string Code) {
            return base.Channel.DeleteLabTestSubItems(Code);
        }
        
        public bool SetTreatment(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag) {
            return base.Channel.SetTreatment(Type, Code, TypeName, Name, InputCode, SortNo, Redundance, InvalidFlag);
        }
        
        public System.Data.DataSet GetTreatment() {
            return base.Channel.GetTreatment();
        }
        
        public int DeleteTreatment(string Type, string Code) {
            return base.Channel.DeleteTreatment(Type, Code);
        }
        
        public bool SetIndicator(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag) {
            return base.Channel.SetIndicator(Type, Code, TypeName, Name, InputCode, SortNo, Redundance, InvalidFlag);
        }
        
        public System.Data.DataSet GetIndicator() {
            return base.Channel.GetIndicator();
        }
        
        public int DeleteIndicator(string Type, string Code) {
            return base.Channel.DeleteIndicator(Type, Code);
        }
        
        public bool SetIndicatorParameter(string Type, string Code, string TypeName, string Name, string InputCode, int SortNo, string Redundance, int InvalidFlag) {
            return base.Channel.SetIndicatorParameter(Type, Code, TypeName, Name, InputCode, SortNo, Redundance, InvalidFlag);
        }
        
        public System.Data.DataSet GetIndicatorParameter() {
            return base.Channel.GetIndicatorParameter();
        }
        
        public int DeleteIndicatorParameter(string Type, string Code) {
            return base.Channel.DeleteIndicatorParameter(Type, Code);
        }
        
        public string GetNo(int NumberingType, string TargetDate) {
            return base.Channel.GetNo(NumberingType, TargetDate);
        }
        
        public bool SetInfoItemCategory(string Code, string Name, int SortNo, int StartDate, int EndDate, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetInfoItemCategory(Code, Name, SortNo, StartDate, EndDate, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetInfoItemCategory() {
            return base.Channel.GetInfoItemCategory();
        }
        
        public int DeleteInfoItemCategory(string Code) {
            return base.Channel.DeleteInfoItemCategory(Code);
        }
        
        public bool SetInfoItem(string CategoryCode, string Code, string Name, string ParentCode, int SortNo, int StartDate, int EndDate, int GroupHeaderFlag, string ControlType, string OptionCategory, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetInfoItem(CategoryCode, Code, Name, ParentCode, SortNo, StartDate, EndDate, GroupHeaderFlag, ControlType, OptionCategory, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetInfoItem() {
            return base.Channel.GetInfoItem();
        }
        
        public int DeleteInfoItem(string CategoryCode, string Code) {
            return base.Channel.DeleteInfoItem(CategoryCode, Code);
        }
        
        public bool SetBasicAlert(string AlertItemCode, string AlertItemName, decimal Min, decimal Max, string Units, string Remarks, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetBasicAlert(AlertItemCode, AlertItemName, Min, Max, Units, Remarks, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public System.Data.DataSet GetBasicAlert() {
            return base.Channel.GetBasicAlert();
        }
        
        public int DeleteBasicAlert(string AlertItemCode) {
            return base.Channel.DeleteBasicAlert(AlertItemCode);
        }
        
        public string GetExaminationItemMaxCode(string Type) {
            return base.Channel.GetExaminationItemMaxCode(Type);
        }
        
        public string GetSymptomsMaxCode(string Type) {
            return base.Channel.GetSymptomsMaxCode(Type);
        }
        
        public string GetDiagnosisMaxCode(string Type) {
            return base.Channel.GetDiagnosisMaxCode(Type);
        }
        
        public string GetVitalSignsMaxCode(string Type) {
            return base.Channel.GetVitalSignsMaxCode(Type);
        }
        
        public string GetLabTestItemsMaxCode(string Type) {
            return base.Channel.GetLabTestItemsMaxCode(Type);
        }
        
        public string GetTreatmentMaxCode(string Type) {
            return base.Channel.GetTreatmentMaxCode(Type);
        }
        
        public string GetIndicatorMaxCode(string Type) {
            return base.Channel.GetIndicatorMaxCode(Type);
        }
        
        public string GetIndicatorParameterMaxCode(string Type) {
            return base.Channel.GetIndicatorParameterMaxCode(Type);
        }
        
        public string GetTypeMaxCode(string Type) {
            return base.Channel.GetTypeMaxCode(Type);
        }
        
        public System.Data.DataSet GetNextCode(string CategoryCode) {
            return base.Channel.GetNextCode(CategoryCode);
        }
        
        public bool SetDrug(string DrugCode, string DrugName, string DrugSpec, string Units, string DrugIndicator, string InputCode) {
            return base.Channel.SetDrug(DrugCode, DrugName, DrugSpec, Units, DrugIndicator, InputCode);
        }
        
        public bool SetDrugDetail(string DrugCode, string Module, string CurativeEffect, string SideEffect, string Instruction, string HealthEffect, string Unit, string Redundance) {
            return base.Channel.SetDrugDetail(DrugCode, Module, CurativeEffect, SideEffect, Instruction, HealthEffect, Unit, Redundance);
        }
        
        public bool SetLifeStyle(string StyleId, string Name, string Redundance) {
            return base.Channel.SetLifeStyle(StyleId, Name, Redundance);
        }
        
        public bool SetLifeStyleDetail(string StyleId, string Module, string CurativeEffect, string SideEffect, string Instruction, string HealthEffect, string Unit, string Redundance) {
            return base.Channel.SetLifeStyleDetail(StyleId, Module, CurativeEffect, SideEffect, Instruction, HealthEffect, Unit, Redundance);
        }
        
        public bool SetInsurance(string Code, string Name, string InputCode, string Redundance, int InvalidFlag) {
            return base.Channel.SetInsurance(Code, Name, InputCode, Redundance, InvalidFlag);
        }
        
        public bool DeleteInsurance(string Code) {
            return base.Channel.DeleteInsurance(Code);
        }
        
        public System.Data.DataSet GetInsuranceType() {
            return base.Channel.GetInsuranceType();
        }
        
        public System.Data.DataSet GetInsurance() {
            return base.Channel.GetInsurance();
        }
        
        public string GetInsuranceName(string Code) {
            return base.Channel.GetInsuranceName(Code);
        }
        
        public bool SetMstUserUM(string UserId, string UserName, string Password, string Class, int EndDate, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetMstUserUM(UserId, UserName, Password, Class, EndDate, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public int DeleteRoleData(string PatientId, string RoleClass) {
            return base.Channel.DeleteRoleData(PatientId, RoleClass);
        }
        
        public string GetClassByUserId(string UserId) {
            return base.Channel.GetClassByUserId(UserId);
        }
        
        public System.Data.DataSet GetUserInfoList(string userId, string userName) {
            return base.Channel.GetUserInfoList(userId, userName);
        }
        
        public bool SetMstUser(string UserId, string UserName, string Password, string Class, string PatientClass, int DoctorClass, int StartDate, int EndDate, System.DateTime LastLoginDateTime, string revUserId, string TerminalName, string TerminalIP, int DeviceType) {
            return base.Channel.SetMstUser(UserId, UserName, Password, Class, PatientClass, DoctorClass, StartDate, EndDate, LastLoginDateTime, revUserId, TerminalName, TerminalIP, DeviceType);
        }
        
        public bool CheckUserExist(string UserId) {
            return base.Channel.CheckUserExist(UserId);
        }
        
        public string GetPhoneNoByUserId(string UserId) {
            return base.Channel.GetPhoneNoByUserId(UserId);
        }
        
        public bool SetPatName(string UserId, string UserName) {
            return base.Channel.SetPatName(UserId, UserName);
        }
    }
}
