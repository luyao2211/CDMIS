@model CDMIS.ViewModels.InfoItemViewModel

@{
    ViewBag.Title = "InfoItem";
}

<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" type="text/css" />
<link href="../../Content/jquery.dataTables.css" rel="stylesheet" type="text/css" />
<link href="../../Content/simpleModal.css" rel="stylesheet" type="text/css" />
<link rel="Stylesheet" href="../../Content/chosen.css" />
<script src="@Url.Content("~/Scripts/jquery-1.11.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/bootstrap.min.js")" type="text/javascript"></script>
<script type="text/javascript" src="../../Scripts/jquery.dataTables.js"></script>
<script type="text/javascript" src="../../Scripts/jquery.simplemodal.1.4.4.min.js"></script>
<script type="text/javascript" src="../../Scripts/chosen.jquery.min.js"></script>

<style type="text/css">
    #simplemodal-container {height:420px; width:400px;}
    #delete-container {height:320px; width:400px;}
</style>

<div style="text-align: right;">
    <input type="button" value="新增数据" class="btn btn-primary insertBtn" style="margin-right: 10px"/>
</div>
<div id="tableContainer1" class="tableContainer" style="margin-top: 5px" >
    <table width="100%" id="DataTable" class="display">
        <thead>
            <tr>
                <th align="left">
                    大类编码
                </th>
                <th align="left">
                    项目编码
                </th>
                <th align="left">
                    项目名称
                </th>
                <th align="left">
                    父级编码
                </th>
                <th align="left" style="display: none;">
                    序列号
                </th>
                <th align="left">
                    控件类型
                </th>
                <th align="left" style="display: none;">
                    控件编码
                </th>
                <th align="left">
                    选项类别
                </th>
                <th align="left">
                    操作
                </th>
            </tr>
        </thead>
        <tbody id="TableBody">
             @foreach (var item in Model.InfoItemList)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.CategoryCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ParentCode)
                    </td>
                    <td style="display: none;">
                        @Html.DisplayFor(modelItem => item.SortNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ControlType)
                    </td>
                    <td style="display: none;">
                        @Html.DisplayFor(modelItem => item.ControlCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OptionCategory)
                    </td>
                    <td>
                        <input type="button" value="编辑" class="btn btn-primary editBtn" /> |
                        <input type="button" value="删除" class="btn btn-primary deleteBtn" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@*新增页面弹框*@
<div id="addDataDiv" style="display: none;">
    <div class="modalHeader">
        <span>详细信息表编辑</span>
    </div>
    <div class="modalContent">
        <form class="form-horizontal" role="form">
            <div class="form-group">
                <label for="CategoryCodeDropDownList_add" class="col-sm-3 control-label">
                    模块选择
                </label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.CategoryCodeSelected, Model.CategoryCodeList(), new { id = "CategoryCodeDropDownList_add", @class = "form-control", style = "font-size:14px", onchange = "GetChanged();" })
                </div>
            </div>
            <div class="form-group">
                <label for="Code_add" class="col-sm-3 control-label">
                    项目类型
                </label>
                <div class="col-sm-7">
                    <select id = "CodeDropDownList_add" class = "form-control" style = "font-size:14px"  onchange="IsSelected(this.id)">
                        <option value ="0">********** 请选择 **********</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label for="Name_add" class="col-sm-3 control-label">
                    项目名称
                </label>
                <div class="col-sm-7">
                    <input type="text" class="form-control" id="Name_add"  onkeyup="IsLegal(this.id);">
                </div>
            </div>
            <div class="form-group">
                <label for="ControlTypeDropDownList_add" class="col-sm-3 control-label">
                    控件形式
                </label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.ControlTypeSelected, Model.ControlTypeList(), new { id = "ControlTypeDropDownList_add", @class = "form-control", style = "font-size:14px",  onchange="IsSelected(this.id)"})
                </div>
            </div>
            <div class="form-group">
                <label for="OptionCategoryDropDownList_add" class="col-sm-3 control-label">
                    选项类别
                </label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.OptionCategorySelected, Model.OptionCategoryList(), new { id = "OptionCategoryDropDownList_add", @class = "form-control", style = "font-size:14px",  onchange="IsSelected(this.id)"})
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-7">
                    <input type="button" class="btn btn-primary save" onclick="AddDataToDB();" value="保存" />
                    <input type="button" class="btn btn-default simplemodal-close" value="取消" />
                </div>
            </div>
            <p align="center" style="color:red" class="notice">
            </p>
        </form>
    </div>
</div>

@*编辑页面弹框*@
<div id="editDataDiv" style="display: none;">
    <div class="modalHeader">
        <span>详细信息表编辑</span>
    </div>
    <div class="modalContent">
        <form class="form-horizontal" role="form">
            <div class="form-group">
                <label for="CategoryCode_edit" class="col-sm-3 control-label">
                    大类编码
                </label>
                <div class="col-sm-7">
                    <input type="text" class="form-control" id="CategoryCode_edit" readonly="readonly">
                </div>
            </div>
            <div class="form-group">
                <label for="Code_edit" class="col-sm-3 control-label">
                    项目编码
                </label>
                <div class="col-sm-7">
                    <input type="text" class="form-control" id="Code_edit" readonly="readonly">
                </div>
            </div>
            <div class="form-group">
                <label for="Name_edit" class="col-sm-3 control-label">
                    项目名称
                </label>
                <div class="col-sm-7">
                    <input type="text" class="form-control" id="Name_edit"  onkeyup="IsLegal(this.id);">
                </div>
            </div>
            <div class="form-group">
                <label for="ControlTypeDropDownList_edit" class="col-sm-3 control-label">
                    控件形式
                </label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.ControlTypeSelected, Model.ControlTypeList(), new { id = "ControlTypeDropDownList_edit", @class = "form-control", style = "font-size:14px", onchange="IsSelected(this.id)"})
                </div>
            </div>
            <div class="form-group">
                <label for="OptionCategoryDropDownList_edit" class="col-sm-3 control-label">
                    选项类别
                </label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.OptionCategorySelected, Model.OptionCategoryList(), new { id = "OptionCategoryDropDownList_edit", @class = "form-control", style = "font-size:14px", onchange = "IsSelected(this.id)" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-7">
                    <input type="button" class="btn btn-primary save" onclick="EditDataToDB();" value="保存" />
                    <input type="button" class="btn btn-default simplemodal-close" value="取消" />
                </div>
            </div>
            <p align="center" style="color:red" class="notice">
            </p>
        </form>
    </div>
</div>

@*删除页面弹框*@
<div id="deleteDataDiv" style="display: none;">
    <div class="modalHeader">
        <span>详细信息表删除</span>
    </div>
    <div class="modalContent">
        <p style="font-size: 16px; color:#EE9A00; font-weight:bold">
            是否确定删除：
        </p>
        <form class="form-horizontal" role="form">
            <div class="form-group">
                <label for="CategoryCode_del" class="col-sm-3 control-label">
                    大类编码
                </label>
                <div class="col-sm-7">
                    <input type="text" class="form-control" id="CategoryCode_del" readonly="readonly">
                </div>
            </div>
            <div class="form-group">
                <label for="Code_del" class="col-sm-3 control-label">
                    项目编码
                </label>
                <div class="col-sm-7">
                    <input type="text" class="form-control" id="Code_del" readonly="readonly">
                </div>
            </div>
            <p style="font-size: 16px; color:#EE9A00; font-weight:bold">
                的这条数据（删除操作将永久删除该条数据）
            </p>
            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-7">
                    <input type="button" class="btn btn-primary" onclick="DeleteDataFromDB();" value="确定" />
                    <input type="button" class="btn btn-default simplemodal-close" value="取消" />
                </div>
            </div>
        </form>
        <p align="center" style="color:red" class="notice">
        </p>
    </div>
</div>


<script type="text/javascript">
    var CategoryCodeTypeFlag = 0;
    var CodeFlag = 0;
    var ControlTypeFlag = 1;
    var OptionCategoryFlag = 1;
    var NameFlag = 0; //编辑弹框输入合法性标志位 0 不合法 1 合法
    var trSeq = -1; //选定的行标
    var editType = 0; //编辑类型，0：无  1：编辑  2：新增
    var SortNo = 0;
    $(document).ready(function () {
        var table = $('#DataTable').DataTable({
            "oLanguage": {//语言国际化
                "sUrl": "/Content/jquery.dataTable.cn.txt"
            },
            "bPaginate": true,  //是否分页。
            "sScrollY": "420px",
            "iDisplayLength": 8,
            "bLengthChange": false,
            "bFilter": true
        });

        $('.chosen').chosen({ disable_search_threshold: 10, no_results_text: "没有匹配结果：",
            allow_single_deselect: true, //配置是否简单搜索
            search_contains: true//配置是否开启全字匹配，不只是首字母搜索 
        });

        //编辑按钮触发
        $(".editBtn").click(function () {
            CategoryCodeTypeFlag = 1;
            CodeFlag = 1;
            ControlTypeFlag = 1;
            OptionCategoryFlag = 1;
            NameFlag = 1;
            editType = 1;
            trSeq = $(this).parent().parent().parent().find("tr").index($(this).parent().parent());
            var CategoryCode = $("#TableBody tr:eq(" + trSeq + ") td:eq(0)").text().trim();
            var Code = $("#TableBody tr:eq(" + trSeq + ") td:eq(1)").text().trim();
            var Name = $("#TableBody tr:eq(" + trSeq + ") td:eq(2)").text().trim();
            var ParentCode = $("#TableBody tr:eq(" + trSeq + ") td:eq(3)").text().trim();
            SortNo = $("#TableBody tr:eq(" + trSeq + ") td:eq(4)").text().trim();
            var ControlType = $("#TableBody tr:eq(" + trSeq + ") td:eq(6)").text().trim();
            var OptionCategory = $("#TableBody tr:eq(" + trSeq + ") td:eq(7)").text().trim();
            EditData(CategoryCode, Code, Name, ParentCode, ControlType, OptionCategory);
        });

        //删除按钮触发
        $(".deleteBtn").click(function () {
            trSeq = $(this).parent().parent().parent().find("tr").index($(this).parent().parent());
            var CategoryCode = $("#TableBody tr:eq(" + trSeq + ") td:eq(0)").text().trim();
            var Code = $("#TableBody tr:eq(" + trSeq + ") td:eq(1)").text().trim();
            DeleteData(CategoryCode, Code);
        });

        //新增按钮触发
        $(".insertBtn").click(function () {
            ControlTypeFlag = 0;
            OptionCategoryFlag = 0;
            NameFlag = 0;
            CategoryCodeTypeFlag = 0;
            CodeFlag = 0;
            editType = 2;
            InsertData();
        });
    });

    //编辑数据
    function EditData(CategoryCode, Code, Name, ParentCode, ControlType, OptionCategory) {
        document.getElementById("CategoryCode_edit").value = CategoryCode;
        document.getElementById("Code_edit").value = Code;
        document.getElementById("Name_edit").value = Name;
        if (ParentCode == "") {
            $('#ControlTypeDropDownList_edit').val("0");
            $('#OptionCategoryDropDownList_edit').val("0");
            $('#ControlTypeDropDownList_edit').attr('disabled', "disabled");
            $('#OptionCategoryDropDownList_edit').attr('disabled', "disabled");
        }
        else {
            $('#ControlTypeDropDownList_edit').val(ControlType);
            $('#OptionCategoryDropDownList_edit').val(OptionCategory);
            $('#ControlTypeDropDownList_edit').removeAttr('disabled');
            $('#OptionCategoryDropDownList_edit').removeAttr('disabled');
        }
        $('.save').removeAttr('disabled');
        $('#CategoryCode_edit').attr('readonly', "readonly");
        $('#Code_edit').attr('readonly', "readonly");
        $('#editDataDiv').modal({
            closeHTML: "<a href='#' title='Close' class='modal-close'>x</a>",
            overlayClose: true     //点击蒙层关闭窗口
        });
    }

    //新增数据
    function InsertData() {
        document.getElementById("Name_edit").value = "";
        $('.save').attr('disabled', "disabled");
        $('#addDataDiv').modal({
            closeHTML: "<a href='#' title='Close' class='modal-close'>x</a>",
            overlayClose: true     //点击蒙层关闭窗口
        });
    }

    //删除数据
    function DeleteData(CategoryCode, Code) {
        document.getElementById("CategoryCode_del").value = CategoryCode;
        document.getElementById("Code_del").value = Code;
        $('#deleteDataDiv').modal({
            closeHTML: "<a href='#' title='Close' class='modal-close'>x</a>",
            containerId: 'delete-container',
            overlayClose: true     //点击蒙层关闭窗口
        });
    }

    //新增提交
    function AddDataToDB() {
        var CategoryCode = $('#CategoryCodeDropDownList_add').val();
        var Code = $('#CodeDropDownList_add').val();
        var Name = document.getElementById("Name_add").value;
        var SortNo = "";
        var ControlType = $('#ControlTypeDropDownList_add').val();
        var OptionCategory = $('#OptionCategoryDropDownList_add').val();
        $.ajax({
            url: "/Dict/InfoItemEdit",
            type: "GET",
            dataType: "json",
            async: false,
            data: { CategoryCode: CategoryCode,
                Code: Code,
                Name: Name,
                SortNo: SortNo,
                ControlType: ControlType,
                OptionCategory: OptionCategory
            },  //输入参数
            success: function (res) {
                if (res == true) {
                    if (editType == 1) {
                        editType = 0;
                        trSeq = -1;
                        CategoryCodeTypeFlag = 0;
                        CodeFlag = 0;
                    }
                    if (editType == 2) {
                        editType = 0;
                        CategoryCodeTypeFlag = 0;
                        CodeFlag = 0;
                    }
                    notice();
                }
                else {
                    alert("数据插入失败，请重新输入！");
                }
            }
        });
    }

    //编辑提交
    function EditDataToDB() {
        var CategoryCode = document.getElementById("CategoryCode_edit").value;
        var Code = document.getElementById("Code_edit").value;
        var Name = document.getElementById("Name_edit").value;
        var ControlType = $('#ControlTypeDropDownList_edit').val();
        var OptionCategory = $('#OptionCategoryDropDownList_edit').val();
        $.ajax({
            url: "/Dict/InfoItemEdit",
            type: "GET",
            dataType: "json",
            async: false,
            data: { CategoryCode: CategoryCode,
                    Code: Code,
                    Name: Name,
                    SortNo:SortNo,
                    ControlType: ControlType,
                    OptionCategory: OptionCategory
             },  //输入参数
            success: function (res) {
                if (res == true) {
                    if (editType == 1){
                        editType = 0;
                        trSeq = -1;
                    }
                    if (editType == 2){
                        editType = 0;
                    }
                    notice();
                }
                else {
                    alert("数据插入失败，请重新输入！");
                }
            }
        });
    }

    //删除提交
    function DeleteDataFromDB() {
        var CategoryCode = document.getElementById("CategoryCode_del").value;
        var Code = document.getElementById("Code_del").value;
        $.ajax({
            url: "/Dict/InfoItemDelete",
            type: "GET",
            dataType: "json",
            async: false,
            data: { CategoryCode: CategoryCode,
                    Code: Code
            },  //输入参数
            success: function (res) {
                if (res == true) {
                    trSeq = -1;
                    notice();
                }
                else {
                    alert("数据删除失败！");
                }
            }
        });
    }

    function GetChanged() {
        var list = document.getElementById("CategoryCodeDropDownList_add");
        var CategoryCode = list.options[list.selectedIndex].value;
        if (CategoryCode == "0") {
            CategoryCodeTypeFlag = 0;
            $('.save').attr('disabled', "disabled");
        }
        else {
            CategoryCodeTypeFlag = 1;
            if (ControlTypeFlag * OptionCategoryFlag * NameFlag * CodeFlag == 1) {
                $('.save').removeAttr('disabled');
            }
        }
        $.ajax({
            url: "/Dict/GetListbyCategory",
            type: "GET",
            dataType: "json",
            async: false,
            data: { CategoryCode: CategoryCode
            },  //输入参数
            success: function (res) {
                $("#CodeDropDownList_add").empty();
                var InitialElement = $("<option></option>").text("********** 请选择 **********");
                InitialElement.attr('value', "0");
                $("#CodeDropDownList_add").append(InitialElement);
                for (var item in res) {
                    var CodeInfo = res[item];
                    var Code = CodeInfo.split("|")[0];
                    var Name = CodeInfo.split("|")[1];
                    var NewElement = $("<option></option>").text(Name);
                    NewElement.attr('value', Code);
                    $("#CodeDropDownList_add").append(NewElement);
                }
            }
        });
    }

    function IsSelected(o) {       
        if ($("#"+o).val() == "0") {
            $('.save').attr('disabled', "disabled");
            switch (o) {
                case "ControlTypeDropDownList_edit":
                    ControlTypeFlag = 0;
                    break;
                case "OptionCategoryDropDownList_edit":
                    OptionCategoryFlag = 0;
                    break;
                case "ControlTypeDropDownList_add":
                    ControlTypeFlag = 0;
                    break;
                case "OptionCategoryDropDownList_add":
                    OptionCategoryFlag = 0;
                    break;
                case "CodeDropDownList_add":
                    CodeFlag = 0;
                    break;
            }
        }
        else {
            switch (o) {
                case "ControlTypeDropDownList_edit":
                    ControlTypeFlag = 1;
                    break;
                case "OptionCategoryDropDownList_edit":
                    OptionCategoryFlag = 1;
                    break;
                case "ControlTypeDropDownList_add":
                    ControlTypeFlag = 1;
                    break;
                case "OptionCategoryDropDownList_add":
                    OptionCategoryFlag = 1;
                    break;
                case "CodeDropDownList_add":
                    CodeFlag = 1;
                    break;
            }
            if (ControlTypeFlag * OptionCategoryFlag * NameFlag * CodeFlag  == 1) {
                $('.save').removeAttr('disabled');
            }
        }
    }

    function IsLegal(o) {
        if (document.getElementById(o).value == "") {
            $('.save').attr('disabled', "disabled");
            switch (o) {
                case "Name_edit":
                    NameFlag = 0;
                    break;
                case "Name_add":
                    NameFlag = 0;
                    break;
            }
        }
        else {
            switch (o) {
                case "Name_edit":
                    NameFlag = 1;
                    break;
                case "Name_add":
                    NameFlag = 1;
                    break;
            }
            if (ControlTypeFlag * OptionCategoryFlag * NameFlag == 1) {
                $('.save').removeAttr('disabled');
            }
        }
    }

    //操作成功提醒+关闭窗口+字典表刷新
    var wait = 1.5;
    function notice() {
        if (wait == 0) {
            window.location.reload();
            $.modal.close();
            wait = 1.5
        }
        else {
            $('.notice').text("操作成功！字典表将立刻自动刷新");
            wait = wait - 0.5;
            setTimeout(notice, 500);
        }
    }

    //去除空格
    String.prototype.trim = function () {
        return this.replace(/(^\s*)|(\s*$)/g, "");
    }
</script>
